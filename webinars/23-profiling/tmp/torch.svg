<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="502.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="485" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="485" > </text>
<g id="frames">
<g >
<title>runtime.pthread_mutex_lock (86 samples, 0.50%)</title><rect x="1175.5" y="325" width="5.9" height="15.0" fill="rgb(210,171,30)" rx="2" ry="2" />
<text  x="1178.49" y="335.5" ></text>
</g>
<g >
<title>runtime.memequal64 (8 samples, 0.05%)</title><rect x="81.8" y="213" width="0.5" height="15.0" fill="rgb(230,209,14)" rx="2" ry="2" />
<text  x="84.78" y="223.5" ></text>
</g>
<g >
<title>runtime.procUnpin (2 samples, 0.01%)</title><rect x="114.8" y="309" width="0.1" height="15.0" fill="rgb(242,107,15)" rx="2" ry="2" />
<text  x="117.81" y="319.5" ></text>
</g>
<g >
<title>syscall.Read (32 samples, 0.18%)</title><rect x="350.0" y="373" width="2.1" height="15.0" fill="rgb(232,124,37)" rx="2" ry="2" />
<text  x="352.96" y="383.5" ></text>
</g>
<g >
<title>runtime.osyield (6 samples, 0.03%)</title><rect x="1181.9" y="309" width="0.4" height="15.0" fill="rgb(214,138,50)" rx="2" ry="2" />
<text  x="1184.90" y="319.5" ></text>
</g>
<g >
<title>syscall.write (32 samples, 0.18%)</title><rect x="18.2" y="309" width="2.2" height="15.0" fill="rgb(248,103,21)" rx="2" ry="2" />
<text  x="21.24" y="319.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (3 samples, 0.02%)</title><rect x="214.1" y="245" width="0.2" height="15.0" fill="rgb(207,137,5)" rx="2" ry="2" />
<text  x="217.10" y="255.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (2 samples, 0.01%)</title><rect x="361.5" y="389" width="0.1" height="15.0" fill="rgb(227,86,10)" rx="2" ry="2" />
<text  x="364.47" y="399.5" ></text>
</g>
<g >
<title>runtime.nanotime (24 samples, 0.14%)</title><rect x="220.8" y="277" width="1.6" height="15.0" fill="rgb(239,79,20)" rx="2" ry="2" />
<text  x="223.78" y="287.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (3 samples, 0.02%)</title><rect x="15.0" y="373" width="0.2" height="15.0" fill="rgb(219,203,11)" rx="2" ry="2" />
<text  x="18.04" y="383.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).tryGrowByReslice (6 samples, 0.03%)</title><rect x="57.1" y="245" width="0.4" height="15.0" fill="rgb(230,21,40)" rx="2" ry="2" />
<text  x="60.13" y="255.5" ></text>
</g>
<g >
<title>runtime.convTslice (237 samples, 1.37%)</title><rect x="320.9" y="357" width="16.1" height="15.0" fill="rgb(254,69,4)" rx="2" ry="2" />
<text  x="323.88" y="367.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (3 samples, 0.02%)</title><rect x="471.0" y="373" width="0.3" height="15.0" fill="rgb(251,55,2)" rx="2" ry="2" />
<text  x="474.05" y="383.5" ></text>
</g>
<g >
<title>runtime.scang (11 samples, 0.06%)</title><rect x="345.3" y="213" width="0.8" height="15.0" fill="rgb(217,152,45)" rx="2" ry="2" />
<text  x="348.33" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (3 samples, 0.02%)</title><rect x="312.2" y="229" width="0.2" height="15.0" fill="rgb(221,214,21)" rx="2" ry="2" />
<text  x="315.17" y="239.5" ></text>
</g>
<g >
<title>runtime.gosched_m (3 samples, 0.02%)</title><rect x="460.4" y="421" width="0.2" height="15.0" fill="rgb(243,92,30)" rx="2" ry="2" />
<text  x="463.43" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.01%)</title><rect x="352.1" y="389" width="0.2" height="15.0" fill="rgb(231,173,45)" rx="2" ry="2" />
<text  x="355.14" y="399.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollReset (2 samples, 0.01%)</title><rect x="241.8" y="133" width="0.1" height="15.0" fill="rgb(229,228,40)" rx="2" ry="2" />
<text  x="244.75" y="143.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.01%)</title><rect x="482.5" y="325" width="0.1" height="15.0" fill="rgb(247,199,46)" rx="2" ry="2" />
<text  x="485.49" y="335.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (3 samples, 0.02%)</title><rect x="357.2" y="277" width="0.2" height="15.0" fill="rgb(230,23,38)" rx="2" ry="2" />
<text  x="360.18" y="287.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (3 samples, 0.02%)</title><rect x="473.3" y="389" width="0.2" height="15.0" fill="rgb(225,46,2)" rx="2" ry="2" />
<text  x="476.30" y="399.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (2 samples, 0.01%)</title><rect x="311.9" y="245" width="0.1" height="15.0" fill="rgb(242,63,15)" rx="2" ry="2" />
<text  x="314.90" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (2 samples, 0.01%)</title><rect x="311.9" y="197" width="0.1" height="15.0" fill="rgb(243,202,49)" rx="2" ry="2" />
<text  x="314.90" y="207.5" ></text>
</g>
<g >
<title>net/http.(*response).Write (1,360 samples, 7.85%)</title><rect x="225.1" y="341" width="92.6" height="15.0" fill="rgb(254,221,34)" rx="2" ry="2" />
<text  x="228.07" y="351.5" >net/http.(*..</text>
</g>
<g >
<title>sync.(*Pool).getSlow (10 samples, 0.06%)</title><rect x="222.5" y="309" width="0.7" height="15.0" fill="rgb(233,205,16)" rx="2" ry="2" />
<text  x="225.48" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (96 samples, 0.55%)</title><rect x="218.5" y="325" width="6.6" height="15.0" fill="rgb(205,25,23)" rx="2" ry="2" />
<text  x="221.53" y="335.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (7 samples, 0.04%)</title><rect x="92.3" y="245" width="0.4" height="15.0" fill="rgb(225,10,27)" rx="2" ry="2" />
<text  x="95.27" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.02%)</title><rect x="220.6" y="261" width="0.2" height="15.0" fill="rgb(209,141,49)" rx="2" ry="2" />
<text  x="223.57" y="271.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (2 samples, 0.01%)</title><rect x="203.1" y="165" width="0.1" height="15.0" fill="rgb(252,158,44)" rx="2" ry="2" />
<text  x="206.07" y="175.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (34 samples, 0.20%)</title><rect x="55.6" y="261" width="2.3" height="15.0" fill="rgb(224,223,49)" rx="2" ry="2" />
<text  x="58.56" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (84 samples, 0.48%)</title><rect x="103.8" y="325" width="5.7" height="15.0" fill="rgb(232,161,41)" rx="2" ry="2" />
<text  x="106.78" y="335.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.02%)</title><rect x="482.2" y="309" width="0.2" height="15.0" fill="rgb(239,54,18)" rx="2" ry="2" />
<text  x="485.22" y="319.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (3 samples, 0.02%)</title><rect x="312.2" y="213" width="0.2" height="15.0" fill="rgb(236,74,44)" rx="2" ry="2" />
<text  x="315.17" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (2 samples, 0.01%)</title><rect x="328.4" y="309" width="0.1" height="15.0" fill="rgb(219,187,5)" rx="2" ry="2" />
<text  x="331.38" y="319.5" ></text>
</g>
<g >
<title>runtime.netpoll (3 samples, 0.02%)</title><rect x="1187.9" y="373" width="0.2" height="15.0" fill="rgb(253,129,44)" rx="2" ry="2" />
<text  x="1190.89" y="383.5" ></text>
</g>
<g >
<title>net/textproto.NewReader (3 samples, 0.02%)</title><rect x="10.6" y="373" width="0.2" height="15.0" fill="rgb(243,39,47)" rx="2" ry="2" />
<text  x="13.61" y="383.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (7 samples, 0.04%)</title><rect x="92.3" y="277" width="0.4" height="15.0" fill="rgb(225,145,7)" rx="2" ry="2" />
<text  x="95.27" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (3 samples, 0.02%)</title><rect x="214.1" y="229" width="0.2" height="15.0" fill="rgb(227,216,46)" rx="2" ry="2" />
<text  x="217.10" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (2 samples, 0.01%)</title><rect x="483.0" y="293" width="0.2" height="15.0" fill="rgb(251,114,0)" rx="2" ry="2" />
<text  x="486.04" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (9 samples, 0.05%)</title><rect x="472.2" y="325" width="0.6" height="15.0" fill="rgb(208,107,30)" rx="2" ry="2" />
<text  x="475.21" y="335.5" ></text>
</g>
<g >
<title>runtime.gcstopm (99 samples, 0.57%)</title><rect x="475.5" y="357" width="6.7" height="15.0" fill="rgb(215,141,27)" rx="2" ry="2" />
<text  x="478.48" y="367.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (2 samples, 0.01%)</title><rect x="15.0" y="325" width="0.2" height="15.0" fill="rgb(236,127,18)" rx="2" ry="2" />
<text  x="18.04" y="335.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (15 samples, 0.09%)</title><rect x="202.2" y="197" width="1.0" height="15.0" fill="rgb(243,206,44)" rx="2" ry="2" />
<text  x="205.18" y="207.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (6 samples, 0.03%)</title><rect x="355.5" y="293" width="0.5" height="15.0" fill="rgb(206,138,8)" rx="2" ry="2" />
<text  x="358.55" y="303.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (3 samples, 0.02%)</title><rect x="303.1" y="277" width="0.2" height="15.0" fill="rgb(243,33,40)" rx="2" ry="2" />
<text  x="306.11" y="287.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).tryGrowByReslice (12 samples, 0.07%)</title><rect x="50.6" y="261" width="0.8" height="15.0" fill="rgb(224,164,48)" rx="2" ry="2" />
<text  x="53.59" y="271.5" ></text>
</g>
<g >
<title>runtime.acquirem (11 samples, 0.06%)</title><rect x="343.9" y="325" width="0.8" height="15.0" fill="rgb(230,56,34)" rx="2" ry="2" />
<text  x="346.90" y="335.5" ></text>
</g>
<g >
<title>runtime.tracebackdefers (4 samples, 0.02%)</title><rect x="357.1" y="309" width="0.3" height="15.0" fill="rgb(231,27,49)" rx="2" ry="2" />
<text  x="360.11" y="319.5" ></text>
</g>
<g >
<title>runtime.gomcache (2 samples, 0.01%)</title><rect x="107.8" y="309" width="0.1" height="15.0" fill="rgb(236,96,35)" rx="2" ry="2" />
<text  x="110.79" y="319.5" ></text>
</g>
<g >
<title>runtime.freedefer (337 samples, 1.94%)</title><rect x="242.3" y="149" width="22.9" height="15.0" fill="rgb(234,78,47)" rx="2" ry="2" />
<text  x="245.30" y="159.5" >r..</text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (3 samples, 0.02%)</title><rect x="15.9" y="373" width="0.2" height="15.0" fill="rgb(222,172,39)" rx="2" ry="2" />
<text  x="18.92" y="383.5" ></text>
</g>
<g >
<title>syscall.Write (394 samples, 2.27%)</title><rect x="265.2" y="165" width="26.9" height="15.0" fill="rgb(240,43,25)" rx="2" ry="2" />
<text  x="268.25" y="175.5" >s..</text>
</g>
<g >
<title>runtime.deductSweepCredit (4 samples, 0.02%)</title><rect x="107.0" y="261" width="0.2" height="15.0" fill="rgb(209,63,46)" rx="2" ry="2" />
<text  x="109.98" y="271.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (2 samples, 0.01%)</title><rect x="212.4" y="309" width="0.1" height="15.0" fill="rgb(238,124,24)" rx="2" ry="2" />
<text  x="215.40" y="319.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.01%)</title><rect x="460.5" y="389" width="0.1" height="15.0" fill="rgb(236,104,53)" rx="2" ry="2" />
<text  x="463.49" y="399.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (7 samples, 0.04%)</title><rect x="295.4" y="213" width="0.5" height="15.0" fill="rgb(207,211,46)" rx="2" ry="2" />
<text  x="298.41" y="223.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (248 samples, 1.43%)</title><rect x="299.8" y="309" width="16.9" height="15.0" fill="rgb(232,197,38)" rx="2" ry="2" />
<text  x="302.84" y="319.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (19 samples, 0.11%)</title><rect x="293.7" y="245" width="1.3" height="15.0" fill="rgb(207,154,7)" rx="2" ry="2" />
<text  x="296.71" y="255.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).tryGrowByReslice (4 samples, 0.02%)</title><rect x="53.2" y="261" width="0.2" height="15.0" fill="rgb(245,147,13)" rx="2" ry="2" />
<text  x="56.18" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (10,232 samples, 59.05%)</title><rect x="484.7" y="357" width="696.9" height="15.0" fill="rgb(221,28,38)" rx="2" ry="2" />
<text  x="487.74" y="367.5" >runtime.notewakeup</text>
</g>
<g >
<title>runtime.deferArgs (2 samples, 0.01%)</title><rect x="90.0" y="309" width="0.1" height="15.0" fill="rgb(252,146,26)" rx="2" ry="2" />
<text  x="92.95" y="319.5" ></text>
</g>
<g >
<title>runtime.mcall (1,669 samples, 9.63%)</title><rect x="359.8" y="437" width="113.7" height="15.0" fill="rgb(248,221,31)" rx="2" ry="2" />
<text  x="362.84" y="447.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.01%)</title><rect x="357.3" y="261" width="0.1" height="15.0" fill="rgb(230,41,2)" rx="2" ry="2" />
<text  x="360.25" y="271.5" ></text>
</g>
<g >
<title>runtime.scanblock (5 samples, 0.03%)</title><rect x="345.5" y="133" width="0.4" height="15.0" fill="rgb(233,179,33)" rx="2" ry="2" />
<text  x="348.54" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).reclaim (2 samples, 0.01%)</title><rect x="483.0" y="373" width="0.2" height="15.0" fill="rgb(212,147,53)" rx="2" ry="2" />
<text  x="486.04" y="383.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (15 samples, 0.09%)</title><rect x="356.0" y="293" width="1.0" height="15.0" fill="rgb(241,130,17)" rx="2" ry="2" />
<text  x="358.96" y="303.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.01%)</title><rect x="483.0" y="245" width="0.2" height="15.0" fill="rgb(226,31,33)" rx="2" ry="2" />
<text  x="486.04" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="97.4" y="277" width="0.2" height="15.0" fill="rgb(235,45,43)" rx="2" ry="2" />
<text  x="100.44" y="287.5" ></text>
</g>
<g >
<title>net/http.(*conn).readRequest (83 samples, 0.48%)</title><rect x="10.1" y="421" width="5.7" height="15.0" fill="rgb(225,162,41)" rx="2" ry="2" />
<text  x="13.14" y="431.5" ></text>
</g>
<g >
<title>context.propagateCancel (2 samples, 0.01%)</title><rect x="10.2" y="389" width="0.1" height="15.0" fill="rgb(212,10,29)" rx="2" ry="2" />
<text  x="13.20" y="399.5" ></text>
</g>
<g >
<title>runtime.runqsteal (2 samples, 0.01%)</title><rect x="361.1" y="373" width="0.1" height="15.0" fill="rgb(244,3,50)" rx="2" ry="2" />
<text  x="364.06" y="383.5" ></text>
</g>
<g >
<title>runtime.forEachP (7 samples, 0.04%)</title><rect x="1188.1" y="389" width="0.5" height="15.0" fill="rgb(230,7,22)" rx="2" ry="2" />
<text  x="1191.09" y="399.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (60 samples, 0.35%)</title><rect x="1183.8" y="405" width="4.1" height="15.0" fill="rgb(248,98,53)" rx="2" ry="2" />
<text  x="1186.80" y="415.5" ></text>
</g>
<g >
<title>runtime.usleep (17 samples, 0.10%)</title><rect x="483.6" y="325" width="1.1" height="15.0" fill="rgb(213,48,22)" rx="2" ry="2" />
<text  x="486.58" y="335.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (3 samples, 0.02%)</title><rect x="295.1" y="213" width="0.2" height="15.0" fill="rgb(208,28,30)" rx="2" ry="2" />
<text  x="298.14" y="223.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (7 samples, 0.04%)</title><rect x="1188.6" y="389" width="0.4" height="15.0" fill="rgb(217,61,6)" rx="2" ry="2" />
<text  x="1191.57" y="399.5" ></text>
</g>
<g >
<title>runtime.pcvalue (5 samples, 0.03%)</title><rect x="356.3" y="229" width="0.3" height="15.0" fill="rgb(253,165,51)" rx="2" ry="2" />
<text  x="359.30" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (10 samples, 0.06%)</title><rect x="327.4" y="277" width="0.7" height="15.0" fill="rgb(211,110,9)" rx="2" ry="2" />
<text  x="330.42" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (22 samples, 0.13%)</title><rect x="473.6" y="341" width="1.5" height="15.0" fill="rgb(208,163,37)" rx="2" ry="2" />
<text  x="476.57" y="351.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (10 samples, 0.06%)</title><rect x="334.1" y="309" width="0.7" height="15.0" fill="rgb(242,88,1)" rx="2" ry="2" />
<text  x="337.10" y="319.5" ></text>
</g>
<g >
<title>runtime.osyield (17 samples, 0.10%)</title><rect x="483.6" y="341" width="1.1" height="15.0" fill="rgb(206,16,28)" rx="2" ry="2" />
<text  x="486.58" y="351.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (2 samples, 0.01%)</title><rect x="97.4" y="309" width="0.2" height="15.0" fill="rgb(250,6,44)" rx="2" ry="2" />
<text  x="100.44" y="319.5" ></text>
</g>
<g >
<title>runtime.newdefer (2 samples, 0.01%)</title><rect x="242.0" y="149" width="0.1" height="15.0" fill="rgb(226,219,34)" rx="2" ry="2" />
<text  x="244.95" y="159.5" ></text>
</g>
<g >
<title>runtime.sweepone (4 samples, 0.02%)</title><rect x="107.0" y="245" width="0.2" height="15.0" fill="rgb(242,34,24)" rx="2" ry="2" />
<text  x="109.98" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (60 samples, 0.35%)</title><rect x="1183.8" y="357" width="4.1" height="15.0" fill="rgb(229,169,10)" rx="2" ry="2" />
<text  x="1186.80" y="367.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (2 samples, 0.01%)</title><rect x="295.2" y="197" width="0.1" height="15.0" fill="rgb(228,218,33)" rx="2" ry="2" />
<text  x="298.21" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.01%)</title><rect x="483.0" y="277" width="0.2" height="15.0" fill="rgb(253,10,22)" rx="2" ry="2" />
<text  x="486.04" y="287.5" ></text>
</g>
<g >
<title>runtime.nanotime (17 samples, 0.10%)</title><rect x="214.6" y="277" width="1.1" height="15.0" fill="rgb(206,211,29)" rx="2" ry="2" />
<text  x="217.58" y="287.5" ></text>
</g>
<g >
<title>runtime.releasem (3 samples, 0.02%)</title><rect x="109.3" y="309" width="0.2" height="15.0" fill="rgb(254,221,29)" rx="2" ry="2" />
<text  x="112.29" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (10,380 samples, 59.91%)</title><rect x="483.0" y="421" width="706.9" height="15.0" fill="rgb(249,2,13)" rx="2" ry="2" />
<text  x="486.04" y="431.5" >runtime.systemstack</text>
</g>
<g >
<title>syscall.syscall (393 samples, 2.27%)</title><rect x="265.3" y="133" width="26.8" height="15.0" fill="rgb(246,15,49)" rx="2" ry="2" />
<text  x="268.31" y="143.5" >s..</text>
</g>
<g >
<title>runtime.gcAssistAlloc (32 samples, 0.18%)</title><rect x="344.7" y="325" width="2.1" height="15.0" fill="rgb(211,16,36)" rx="2" ry="2" />
<text  x="347.65" y="335.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.02%)</title><rect x="473.3" y="357" width="0.2" height="15.0" fill="rgb(236,201,42)" rx="2" ry="2" />
<text  x="476.30" y="367.5" ></text>
</g>
<g >
<title>runtime.kevent (3 samples, 0.02%)</title><rect x="1187.9" y="357" width="0.2" height="15.0" fill="rgb(234,229,40)" rx="2" ry="2" />
<text  x="1190.89" y="367.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.01%)</title><rect x="297.5" y="245" width="0.2" height="15.0" fill="rgb(249,79,39)" rx="2" ry="2" />
<text  x="300.53" y="255.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (3 samples, 0.02%)</title><rect x="460.4" y="405" width="0.2" height="15.0" fill="rgb(251,51,29)" rx="2" ry="2" />
<text  x="463.43" y="415.5" ></text>
</g>
<g >
<title>runtime.findrunnable (2 samples, 0.01%)</title><rect x="475.3" y="357" width="0.2" height="15.0" fill="rgb(210,59,12)" rx="2" ry="2" />
<text  x="478.34" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="212.4" y="293" width="0.1" height="15.0" fill="rgb(241,105,16)" rx="2" ry="2" />
<text  x="215.40" y="303.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.01%)</title><rect x="293.6" y="229" width="0.1" height="15.0" fill="rgb(209,207,50)" rx="2" ry="2" />
<text  x="296.58" y="239.5" ></text>
</g>
<g >
<title>runtime.startm (6 samples, 0.03%)</title><rect x="291.5" y="53" width="0.4" height="15.0" fill="rgb(238,118,4)" rx="2" ry="2" />
<text  x="294.53" y="63.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (20 samples, 0.12%)</title><rect x="201.8" y="245" width="1.4" height="15.0" fill="rgb(216,217,13)" rx="2" ry="2" />
<text  x="204.84" y="255.5" ></text>
</g>
<g >
<title>runtime.freedefer (39 samples, 0.23%)</title><rect x="309.4" y="277" width="2.7" height="15.0" fill="rgb(236,12,43)" rx="2" ry="2" />
<text  x="312.44" y="287.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (138 samples, 0.80%)</title><rect x="473.5" y="405" width="9.4" height="15.0" fill="rgb(237,25,5)" rx="2" ry="2" />
<text  x="476.50" y="415.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.02%)</title><rect x="482.2" y="277" width="0.2" height="15.0" fill="rgb(219,79,35)" rx="2" ry="2" />
<text  x="485.22" y="287.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Bytes (7 samples, 0.04%)</title><rect x="28.3" y="341" width="0.5" height="15.0" fill="rgb(208,166,12)" rx="2" ry="2" />
<text  x="31.32" y="351.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (24 samples, 0.14%)</title><rect x="220.8" y="309" width="1.6" height="15.0" fill="rgb(226,116,29)" rx="2" ry="2" />
<text  x="223.78" y="319.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (79 samples, 0.46%)</title><rect x="354.5" y="405" width="5.3" height="15.0" fill="rgb(205,171,14)" rx="2" ry="2" />
<text  x="357.46" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.01%)</title><rect x="343.6" y="261" width="0.1" height="15.0" fill="rgb(222,125,35)" rx="2" ry="2" />
<text  x="346.56" y="271.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Available (11 samples, 0.06%)</title><rect x="239.6" y="293" width="0.8" height="15.0" fill="rgb(236,119,6)" rx="2" ry="2" />
<text  x="242.64" y="303.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (3 samples, 0.02%)</title><rect x="303.1" y="229" width="0.2" height="15.0" fill="rgb(223,54,35)" rx="2" ry="2" />
<text  x="306.11" y="239.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (26 samples, 0.15%)</title><rect x="84.2" y="229" width="1.8" height="15.0" fill="rgb(251,187,19)" rx="2" ry="2" />
<text  x="87.23" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (2 samples, 0.01%)</title><rect x="327.8" y="197" width="0.2" height="15.0" fill="rgb(211,148,1)" rx="2" ry="2" />
<text  x="330.83" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (21 samples, 0.12%)</title><rect x="460.9" y="373" width="1.4" height="15.0" fill="rgb(248,21,12)" rx="2" ry="2" />
<text  x="463.90" y="383.5" ></text>
</g>
<g >
<title>runtime.bucketMask (3 samples, 0.02%)</title><rect x="80.0" y="245" width="0.2" height="15.0" fill="rgb(234,94,8)" rx="2" ry="2" />
<text  x="83.01" y="255.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (2 samples, 0.01%)</title><rect x="344.7" y="277" width="0.1" height="15.0" fill="rgb(206,60,44)" rx="2" ry="2" />
<text  x="347.65" y="287.5" ></text>
</g>
<g >
<title>fmt.(*buffer).WriteByte (57 samples, 0.33%)</title><rect x="135.1" y="293" width="3.9" height="15.0" fill="rgb(223,34,6)" rx="2" ry="2" />
<text  x="138.10" y="303.5" ></text>
</g>
<g >
<title>net/http.(*connReader).startBackgroundRead (4 samples, 0.02%)</title><rect x="15.9" y="421" width="0.2" height="15.0" fill="rgb(227,34,44)" rx="2" ry="2" />
<text  x="18.86" y="431.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (747 samples, 4.31%)</title><rect x="241.2" y="229" width="50.9" height="15.0" fill="rgb(236,49,44)" rx="2" ry="2" />
<text  x="244.21" y="239.5" >net/h..</text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (11 samples, 0.06%)</title><rect x="1189.1" y="341" width="0.8" height="15.0" fill="rgb(211,228,43)" rx="2" ry="2" />
<text  x="1192.11" y="351.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtBytes (1,257 samples, 7.25%)</title><rect x="124.3" y="309" width="85.6" height="15.0" fill="rgb(242,229,24)" rx="2" ry="2" />
<text  x="127.34" y="319.5" >fmt.(*pp)...</text>
</g>
<g >
<title>runtime.lock (2 samples, 0.01%)</title><rect x="482.5" y="341" width="0.1" height="15.0" fill="rgb(233,4,21)" rx="2" ry="2" />
<text  x="485.49" y="351.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.01%)</title><rect x="294.9" y="149" width="0.1" height="15.0" fill="rgb(220,207,25)" rx="2" ry="2" />
<text  x="297.87" y="159.5" ></text>
</g>
<g >
<title>runtime.stopm (4 samples, 0.02%)</title><rect x="361.2" y="373" width="0.3" height="15.0" fill="rgb(211,37,8)" rx="2" ry="2" />
<text  x="364.20" y="383.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (3 samples, 0.02%)</title><rect x="1187.9" y="405" width="0.2" height="15.0" fill="rgb(227,208,6)" rx="2" ry="2" />
<text  x="1190.89" y="415.5" ></text>
</g>
<g >
<title>runtime.gomcache (2 samples, 0.01%)</title><rect x="347.0" y="325" width="0.1" height="15.0" fill="rgb(205,151,29)" rx="2" ry="2" />
<text  x="349.97" y="335.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (6 samples, 0.03%)</title><rect x="210.0" y="261" width="0.4" height="15.0" fill="rgb(239,140,46)" rx="2" ry="2" />
<text  x="213.02" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.02%)</title><rect x="327.8" y="245" width="0.2" height="15.0" fill="rgb(212,75,2)" rx="2" ry="2" />
<text  x="330.83" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocManual (2 samples, 0.01%)</title><rect x="1181.8" y="293" width="0.1" height="15.0" fill="rgb(219,186,4)" rx="2" ry="2" />
<text  x="1184.76" y="303.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (4 samples, 0.02%)</title><rect x="312.1" y="277" width="0.3" height="15.0" fill="rgb(212,102,41)" rx="2" ry="2" />
<text  x="315.10" y="287.5" ></text>
</g>
<g >
<title>runtime.memmove (4 samples, 0.02%)</title><rect x="110.4" y="325" width="0.3" height="15.0" fill="rgb(248,167,26)" rx="2" ry="2" />
<text  x="113.38" y="335.5" ></text>
</g>
<g >
<title>runtime.unlock (3 samples, 0.02%)</title><rect x="1188.4" y="373" width="0.2" height="15.0" fill="rgb(235,149,11)" rx="2" ry="2" />
<text  x="1191.37" y="383.5" ></text>
</g>
<g >
<title>runtime.semasleep (9 samples, 0.05%)</title><rect x="472.2" y="341" width="0.6" height="15.0" fill="rgb(211,124,9)" rx="2" ry="2" />
<text  x="475.21" y="351.5" ></text>
</g>
<g >
<title>runtime.sweepone (2 samples, 0.01%)</title><rect x="328.2" y="261" width="0.1" height="15.0" fill="rgb(212,139,18)" rx="2" ry="2" />
<text  x="331.17" y="271.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (246 samples, 1.42%)</title><rect x="71.0" y="309" width="16.7" height="15.0" fill="rgb(236,17,39)" rx="2" ry="2" />
<text  x="73.95" y="319.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (9 samples, 0.05%)</title><rect x="92.1" y="293" width="0.6" height="15.0" fill="rgb(248,65,23)" rx="2" ry="2" />
<text  x="95.13" y="303.5" ></text>
</g>
<g >
<title>runtime.getempty (2 samples, 0.01%)</title><rect x="1181.8" y="325" width="0.1" height="15.0" fill="rgb(253,96,40)" rx="2" ry="2" />
<text  x="1184.76" y="335.5" ></text>
</g>
<g >
<title>runtime.markroot (13 samples, 0.08%)</title><rect x="345.2" y="245" width="0.9" height="15.0" fill="rgb(243,192,51)" rx="2" ry="2" />
<text  x="348.20" y="255.5" ></text>
</g>
<g >
<title>runtime.growslice (138 samples, 0.80%)</title><rect x="101.9" y="341" width="9.4" height="15.0" fill="rgb(231,7,45)" rx="2" ry="2" />
<text  x="104.94" y="351.5" ></text>
</g>
<g >
<title>runtime.memmove (12 samples, 0.07%)</title><rect x="53.4" y="261" width="0.9" height="15.0" fill="rgb(235,180,4)" rx="2" ry="2" />
<text  x="56.45" y="271.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (15 samples, 0.09%)</title><rect x="202.2" y="181" width="1.0" height="15.0" fill="rgb(238,94,45)" rx="2" ry="2" />
<text  x="205.18" y="191.5" ></text>
</g>
<g >
<title>runtime.getempty.func1 (2 samples, 0.01%)</title><rect x="1181.8" y="309" width="0.1" height="15.0" fill="rgb(229,142,37)" rx="2" ry="2" />
<text  x="1184.76" y="319.5" ></text>
</g>
<g >
<title>runtime.runqgrab (14 samples, 0.08%)</title><rect x="471.3" y="357" width="0.9" height="15.0" fill="rgb(240,188,27)" rx="2" ry="2" />
<text  x="474.25" y="367.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (3 samples, 0.02%)</title><rect x="303.1" y="213" width="0.2" height="15.0" fill="rgb(234,128,37)" rx="2" ry="2" />
<text  x="306.11" y="223.5" ></text>
</g>
<g >
<title>runtime.deferreturn (72 samples, 0.42%)</title><rect x="92.8" y="325" width="4.9" height="15.0" fill="rgb(248,19,36)" rx="2" ry="2" />
<text  x="95.81" y="335.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.01%)</title><rect x="460.3" y="405" width="0.1" height="15.0" fill="rgb(211,174,47)" rx="2" ry="2" />
<text  x="463.29" y="415.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).Handler (4 samples, 0.02%)</title><rect x="20.6" y="389" width="0.2" height="15.0" fill="rgb(226,38,47)" rx="2" ry="2" />
<text  x="23.56" y="399.5" ></text>
</g>
<g >
<title>runtime.procPin (7 samples, 0.04%)</title><rect x="224.4" y="277" width="0.5" height="15.0" fill="rgb(213,23,10)" rx="2" ry="2" />
<text  x="227.38" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (20 samples, 0.12%)</title><rect x="460.9" y="357" width="1.4" height="15.0" fill="rgb(208,183,45)" rx="2" ry="2" />
<text  x="463.90" y="367.5" ></text>
</g>
<g >
<title>runtime.bgsweep (14 samples, 0.08%)</title><rect x="353.4" y="437" width="0.9" height="15.0" fill="rgb(214,212,31)" rx="2" ry="2" />
<text  x="356.37" y="447.5" ></text>
</g>
<g >
<title>runtime.handoffp (10,250 samples, 59.16%)</title><rect x="483.6" y="389" width="698.0" height="15.0" fill="rgb(221,12,38)" rx="2" ry="2" />
<text  x="486.58" y="399.5" >runtime.handoffp</text>
</g>
<g >
<title>runtime.procPin (7 samples, 0.04%)</title><rect x="216.8" y="277" width="0.4" height="15.0" fill="rgb(207,41,12)" rx="2" ry="2" />
<text  x="219.76" y="287.5" ></text>
</g>
<g >
<title>reflect.Value.Field (29 samples, 0.17%)</title><rect x="65.0" y="277" width="2.0" height="15.0" fill="rgb(241,147,14)" rx="2" ry="2" />
<text  x="68.03" y="287.5" ></text>
</g>
<g >
<title>runtime.kevent (125 samples, 0.72%)</title><rect x="462.5" y="357" width="8.5" height="15.0" fill="rgb(247,122,50)" rx="2" ry="2" />
<text  x="465.54" y="367.5" ></text>
</g>
<g >
<title>runtime.semrelease (2 samples, 0.01%)</title><rect x="344.7" y="293" width="0.1" height="15.0" fill="rgb(239,78,52)" rx="2" ry="2" />
<text  x="347.65" y="303.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (2 samples, 0.01%)</title><rect x="312.4" y="293" width="0.1" height="15.0" fill="rgb(250,56,45)" rx="2" ry="2" />
<text  x="315.37" y="303.5" ></text>
</g>
<g >
<title>runtime.findrunnable (2 samples, 0.01%)</title><rect x="460.5" y="373" width="0.1" height="15.0" fill="rgb(233,45,45)" rx="2" ry="2" />
<text  x="463.49" y="383.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (2 samples, 0.01%)</title><rect x="218.4" y="309" width="0.1" height="15.0" fill="rgb(245,104,33)" rx="2" ry="2" />
<text  x="221.39" y="319.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (3 samples, 0.02%)</title><rect x="1187.9" y="389" width="0.2" height="15.0" fill="rgb(231,150,15)" rx="2" ry="2" />
<text  x="1190.89" y="399.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (6 samples, 0.03%)</title><rect x="210.0" y="245" width="0.4" height="15.0" fill="rgb(251,4,16)" rx="2" ry="2" />
<text  x="213.02" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (18 samples, 0.10%)</title><rect x="335.7" y="325" width="1.2" height="15.0" fill="rgb(217,38,24)" rx="2" ry="2" />
<text  x="338.66" y="335.5" ></text>
</g>
<g >
<title>main.handler (4,804 samples, 27.73%)</title><rect x="20.8" y="373" width="327.2" height="15.0" fill="rgb(250,15,1)" rx="2" ry="2" />
<text  x="23.83" y="383.5" >main.handler</text>
</g>
<g >
<title>runtime.usleep (14 samples, 0.08%)</title><rect x="471.3" y="341" width="0.9" height="15.0" fill="rgb(225,136,9)" rx="2" ry="2" />
<text  x="474.25" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.01%)</title><rect x="343.6" y="277" width="0.1" height="15.0" fill="rgb(219,114,39)" rx="2" ry="2" />
<text  x="346.56" y="287.5" ></text>
</g>
<g >
<title>runtime.findrunnable (180 samples, 1.04%)</title><rect x="460.8" y="389" width="12.2" height="15.0" fill="rgb(206,19,28)" rx="2" ry="2" />
<text  x="463.77" y="399.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (2 samples, 0.01%)</title><rect x="311.9" y="213" width="0.1" height="15.0" fill="rgb(229,213,5)" rx="2" ry="2" />
<text  x="314.90" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (21 samples, 0.12%)</title><rect x="1182.4" y="325" width="1.4" height="15.0" fill="rgb(241,49,41)" rx="2" ry="2" />
<text  x="1185.37" y="335.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintln (1,362 samples, 7.86%)</title><rect x="117.7" y="341" width="92.7" height="15.0" fill="rgb(221,153,3)" rx="2" ry="2" />
<text  x="120.67" y="351.5" >fmt.(*pp).d..</text>
</g>
<g >
<title>sync.runtime_procUnpin (4 samples, 0.02%)</title><rect x="114.7" y="325" width="0.2" height="15.0" fill="rgb(226,140,18)" rx="2" ry="2" />
<text  x="117.67" y="335.5" ></text>
</g>
<g >
<title>runtime.deferreturn (25 samples, 0.14%)</title><rect x="11.2" y="245" width="1.7" height="15.0" fill="rgb(250,139,45)" rx="2" ry="2" />
<text  x="14.16" y="255.5" ></text>
</g>
<g >
<title>runtime.deferreturn (340 samples, 1.96%)</title><rect x="242.1" y="165" width="23.1" height="15.0" fill="rgb(220,119,1)" rx="2" ry="2" />
<text  x="245.09" y="175.5" >r..</text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (60 samples, 0.35%)</title><rect x="16.3" y="389" width="4.1" height="15.0" fill="rgb(244,115,0)" rx="2" ry="2" />
<text  x="19.33" y="399.5" ></text>
</g>
<g >
<title>runtime.notetsleep (11 samples, 0.06%)</title><rect x="1189.1" y="389" width="0.8" height="15.0" fill="rgb(206,224,9)" rx="2" ry="2" />
<text  x="1192.11" y="399.5" ></text>
</g>
<g >
<title>runtime.goexit0 (3 samples, 0.02%)</title><rect x="460.2" y="421" width="0.2" height="15.0" fill="rgb(240,204,16)" rx="2" ry="2" />
<text  x="463.22" y="431.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (2 samples, 0.01%)</title><rect x="459.9" y="357" width="0.1" height="15.0" fill="rgb(241,187,22)" rx="2" ry="2" />
<text  x="462.88" y="367.5" ></text>
</g>
<g >
<title>runtime.scang (21 samples, 0.12%)</title><rect x="1182.4" y="341" width="1.4" height="15.0" fill="rgb(226,168,27)" rx="2" ry="2" />
<text  x="1185.37" y="351.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteString (42 samples, 0.24%)</title><rect x="51.4" y="277" width="2.9" height="15.0" fill="rgb(247,51,40)" rx="2" ry="2" />
<text  x="54.41" y="287.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (2 samples, 0.01%)</title><rect x="15.0" y="293" width="0.2" height="15.0" fill="rgb(243,23,27)" rx="2" ry="2" />
<text  x="18.04" y="303.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (20 samples, 0.12%)</title><rect x="296.3" y="261" width="1.4" height="15.0" fill="rgb(225,127,31)" rx="2" ry="2" />
<text  x="299.30" y="271.5" ></text>
</g>
<g >
<title>reflect.flag.kind (2 samples, 0.01%)</title><rect x="69.5" y="277" width="0.2" height="15.0" fill="rgb(214,102,54)" rx="2" ry="2" />
<text  x="72.52" y="287.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (2 samples, 0.01%)</title><rect x="344.7" y="261" width="0.1" height="15.0" fill="rgb(210,63,42)" rx="2" ry="2" />
<text  x="347.65" y="271.5" ></text>
</g>
<g >
<title>runtime.convI2I (47 samples, 0.27%)</title><rect x="317.7" y="357" width="3.2" height="15.0" fill="rgb(237,224,3)" rx="2" ry="2" />
<text  x="320.68" y="367.5" ></text>
</g>
<g >
<title>runtime.sweepone (14 samples, 0.08%)</title><rect x="353.4" y="421" width="0.9" height="15.0" fill="rgb(226,161,51)" rx="2" ry="2" />
<text  x="356.37" y="431.5" ></text>
</g>
<g >
<title>net/url.parse (3 samples, 0.02%)</title><rect x="15.3" y="373" width="0.2" height="15.0" fill="rgb(232,160,26)" rx="2" ry="2" />
<text  x="18.31" y="383.5" ></text>
</g>
<g >
<title>reflect.flag.kind (3 samples, 0.02%)</title><rect x="70.7" y="277" width="0.3" height="15.0" fill="rgb(217,221,19)" rx="2" ry="2" />
<text  x="73.75" y="287.5" ></text>
</g>
<g >
<title>fmt.(*pp).free (103 samples, 0.59%)</title><rect x="210.4" y="341" width="7.0" height="15.0" fill="rgb(248,193,12)" rx="2" ry="2" />
<text  x="213.42" y="351.5" ></text>
</g>
<g >
<title>runtime.findfunc (3 samples, 0.02%)</title><rect x="355.3" y="293" width="0.2" height="15.0" fill="rgb(234,160,18)" rx="2" ry="2" />
<text  x="358.34" y="303.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (3 samples, 0.02%)</title><rect x="296.0" y="181" width="0.2" height="15.0" fill="rgb(236,87,15)" rx="2" ry="2" />
<text  x="298.96" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (10,143 samples, 58.54%)</title><rect x="484.7" y="325" width="690.8" height="15.0" fill="rgb(228,119,19)" rx="2" ry="2" />
<text  x="487.74" y="335.5" >runtime.pthread_cond_signal</text>
</g>
<g >
<title>net/http.(*connReader).Read (58 samples, 0.33%)</title><rect x="11.1" y="309" width="3.9" height="15.0" fill="rgb(208,216,52)" rx="2" ry="2" />
<text  x="14.09" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.02%)</title><rect x="220.6" y="277" width="0.2" height="15.0" fill="rgb(232,119,12)" rx="2" ry="2" />
<text  x="223.57" y="287.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (31 samples, 0.18%)</title><rect x="80.2" y="245" width="2.1" height="15.0" fill="rgb(221,79,9)" rx="2" ry="2" />
<text  x="83.21" y="255.5" ></text>
</g>
<g >
<title>fmt.glob..func1 (3 samples, 0.02%)</title><rect x="220.6" y="309" width="0.2" height="15.0" fill="rgb(219,155,10)" rx="2" ry="2" />
<text  x="223.57" y="319.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtInteger (10 samples, 0.06%)</title><rect x="294.3" y="213" width="0.7" height="15.0" fill="rgb(248,91,50)" rx="2" ry="2" />
<text  x="297.33" y="223.5" ></text>
</g>
<g >
<title>syscall.write (394 samples, 2.27%)</title><rect x="265.2" y="149" width="26.9" height="15.0" fill="rgb(246,26,14)" rx="2" ry="2" />
<text  x="268.25" y="159.5" >s..</text>
</g>
<g >
<title>runtime.usleep (4 samples, 0.02%)</title><rect x="483.2" y="341" width="0.2" height="15.0" fill="rgb(231,56,14)" rx="2" ry="2" />
<text  x="486.17" y="351.5" ></text>
</g>
<g >
<title>runtime.schedule (115 samples, 0.66%)</title><rect x="475.1" y="373" width="7.8" height="15.0" fill="rgb(238,24,15)" rx="2" ry="2" />
<text  x="478.07" y="383.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.01%)</title><rect x="475.3" y="341" width="0.2" height="15.0" fill="rgb(223,106,6)" rx="2" ry="2" />
<text  x="478.34" y="351.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (10 samples, 0.06%)</title><rect x="222.5" y="293" width="0.7" height="15.0" fill="rgb(205,194,38)" rx="2" ry="2" />
<text  x="225.48" y="303.5" ></text>
</g>
<g >
<title>runtime.deferreturn (82 samples, 0.47%)</title><rect x="306.8" y="293" width="5.6" height="15.0" fill="rgb(232,21,18)" rx="2" ry="2" />
<text  x="309.79" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (3 samples, 0.02%)</title><rect x="107.0" y="229" width="0.2" height="15.0" fill="rgb(220,174,6)" rx="2" ry="2" />
<text  x="110.05" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (14 samples, 0.08%)</title><rect x="327.4" y="309" width="1.0" height="15.0" fill="rgb(223,98,46)" rx="2" ry="2" />
<text  x="330.42" y="319.5" ></text>
</g>
<g >
<title>fmt.(*fmt).pad (377 samples, 2.18%)</title><rect x="184.3" y="277" width="25.6" height="15.0" fill="rgb(208,68,38)" rx="2" ry="2" />
<text  x="187.27" y="287.5" >f..</text>
</g>
<g >
<title>fmt.(*fmt).pad (3 samples, 0.02%)</title><rect x="294.8" y="181" width="0.2" height="15.0" fill="rgb(215,128,4)" rx="2" ry="2" />
<text  x="297.80" y="191.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (12 samples, 0.07%)</title><rect x="352.6" y="437" width="0.8" height="15.0" fill="rgb(205,53,53)" rx="2" ry="2" />
<text  x="355.55" y="447.5" ></text>
</g>
<g >
<title>runtime.runqsteal (14 samples, 0.08%)</title><rect x="471.3" y="373" width="0.9" height="15.0" fill="rgb(220,132,10)" rx="2" ry="2" />
<text  x="474.25" y="383.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (20 samples, 0.12%)</title><rect x="215.9" y="309" width="1.3" height="15.0" fill="rgb(239,45,50)" rx="2" ry="2" />
<text  x="218.87" y="319.5" ></text>
</g>
<g >
<title>runtime.notesleep (1,443 samples, 8.33%)</title><rect x="361.9" y="389" width="98.3" height="15.0" fill="rgb(241,16,21)" rx="2" ry="2" />
<text  x="364.88" y="399.5" >runtime.not..</text>
</g>
<g >
<title>sync.(*Pool).pin (2 samples, 0.01%)</title><rect x="296.2" y="213" width="0.1" height="15.0" fill="rgb(215,94,32)" rx="2" ry="2" />
<text  x="299.16" y="223.5" ></text>
</g>
<g >
<title>runtime.memmove (14 samples, 0.08%)</title><rect x="292.1" y="245" width="0.9" height="15.0" fill="rgb(253,137,10)" rx="2" ry="2" />
<text  x="295.08" y="255.5" ></text>
</g>
<g >
<title>runtime.memmove (99 samples, 0.57%)</title><rect x="203.2" y="245" width="6.7" height="15.0" fill="rgb(226,68,21)" rx="2" ry="2" />
<text  x="206.20" y="255.5" ></text>
</g>
<g >
<title>runtime.gcstopm (2 samples, 0.01%)</title><rect x="460.8" y="373" width="0.1" height="15.0" fill="rgb(221,110,43)" rx="2" ry="2" />
<text  x="463.77" y="383.5" ></text>
</g>
<g >
<title>sync.(*entry).load (9 samples, 0.05%)</title><rect x="86.1" y="261" width="0.6" height="15.0" fill="rgb(228,13,11)" rx="2" ry="2" />
<text  x="89.07" y="271.5" ></text>
</g>
<g >
<title>net/http.textSig.match (2 samples, 0.01%)</title><rect x="296.9" y="229" width="0.1" height="15.0" fill="rgb(224,124,10)" rx="2" ry="2" />
<text  x="299.91" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (9 samples, 0.05%)</title><rect x="1181.7" y="405" width="0.6" height="15.0" fill="rgb(217,61,23)" rx="2" ry="2" />
<text  x="1184.69" y="415.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.02%)</title><rect x="1188.4" y="341" width="0.2" height="15.0" fill="rgb(221,53,46)" rx="2" ry="2" />
<text  x="1191.37" y="351.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (2 samples, 0.01%)</title><rect x="97.4" y="245" width="0.2" height="15.0" fill="rgb(232,40,39)" rx="2" ry="2" />
<text  x="100.44" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (4 samples, 0.02%)</title><rect x="482.6" y="325" width="0.3" height="15.0" fill="rgb(219,194,53)" rx="2" ry="2" />
<text  x="485.63" y="335.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (3 samples, 0.02%)</title><rect x="354.5" y="373" width="0.2" height="15.0" fill="rgb(211,199,0)" rx="2" ry="2" />
<text  x="357.46" y="383.5" ></text>
</g>
<g >
<title>runtime.mstart1 (2 samples, 0.01%)</title><rect x="482.9" y="421" width="0.1" height="15.0" fill="rgb(249,72,50)" rx="2" ry="2" />
<text  x="485.90" y="431.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Reset (4 samples, 0.02%)</title><rect x="98.4" y="325" width="0.3" height="15.0" fill="rgb(219,77,11)" rx="2" ry="2" />
<text  x="101.40" y="335.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (2 samples, 0.01%)</title><rect x="97.4" y="293" width="0.2" height="15.0" fill="rgb(213,9,13)" rx="2" ry="2" />
<text  x="100.44" y="303.5" ></text>
</g>
<g >
<title>runtime.mstart (10,382 samples, 59.92%)</title><rect x="482.9" y="437" width="707.0" height="15.0" fill="rgb(215,130,26)" rx="2" ry="2" />
<text  x="485.90" y="447.5" >runtime.mstart</text>
</g>
<g >
<title>runtime.freedefer (28 samples, 0.16%)</title><rect x="16.3" y="309" width="1.9" height="15.0" fill="rgb(241,40,35)" rx="2" ry="2" />
<text  x="19.33" y="319.5" ></text>
</g>
<g >
<title>runtime.nanotime (3 samples, 0.02%)</title><rect x="296.0" y="165" width="0.2" height="15.0" fill="rgb(230,114,7)" rx="2" ry="2" />
<text  x="298.96" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.02%)</title><rect x="214.1" y="261" width="0.2" height="15.0" fill="rgb(220,100,6)" rx="2" ry="2" />
<text  x="217.10" y="271.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (58 samples, 0.33%)</title><rect x="11.1" y="357" width="3.9" height="15.0" fill="rgb(206,109,5)" rx="2" ry="2" />
<text  x="14.09" y="367.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (206 samples, 1.19%)</title><rect x="73.0" y="277" width="14.0" height="15.0" fill="rgb(228,69,13)" rx="2" ry="2" />
<text  x="75.99" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (20 samples, 0.12%)</title><rect x="460.9" y="341" width="1.4" height="15.0" fill="rgb(221,179,53)" rx="2" ry="2" />
<text  x="463.90" y="351.5" ></text>
</g>
<g >
<title>runtime.forEachP (60 samples, 0.35%)</title><rect x="1183.8" y="389" width="4.1" height="15.0" fill="rgb(231,60,54)" rx="2" ry="2" />
<text  x="1186.80" y="399.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Available (5 samples, 0.03%)</title><rect x="293.2" y="229" width="0.4" height="15.0" fill="rgb(216,94,10)" rx="2" ry="2" />
<text  x="296.24" y="239.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (58 samples, 0.33%)</title><rect x="11.1" y="373" width="3.9" height="15.0" fill="rgb(227,170,12)" rx="2" ry="2" />
<text  x="14.09" y="383.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (25 samples, 0.14%)</title><rect x="223.2" y="309" width="1.7" height="15.0" fill="rgb(215,82,30)" rx="2" ry="2" />
<text  x="226.16" y="319.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (82 samples, 0.47%)</title><rect x="476.6" y="293" width="5.6" height="15.0" fill="rgb(208,131,39)" rx="2" ry="2" />
<text  x="479.63" y="303.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).handler (2 samples, 0.01%)</title><rect x="20.6" y="373" width="0.1" height="15.0" fill="rgb(229,123,39)" rx="2" ry="2" />
<text  x="23.56" y="383.5" ></text>
</g>
<g >
<title>runtime.handoffp (7 samples, 0.04%)</title><rect x="291.5" y="69" width="0.4" height="15.0" fill="rgb(251,149,25)" rx="2" ry="2" />
<text  x="294.46" y="79.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (383 samples, 2.21%)</title><rect x="40.9" y="293" width="26.1" height="15.0" fill="rgb(247,95,22)" rx="2" ry="2" />
<text  x="43.92" y="303.5" >e..</text>
</g>
<g >
<title>sync.(*Mutex).Unlock (2 samples, 0.01%)</title><rect x="215.7" y="309" width="0.2" height="15.0" fill="rgb(230,158,31)" rx="2" ry="2" />
<text  x="218.74" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (744 samples, 4.29%)</title><rect x="241.4" y="181" width="50.7" height="15.0" fill="rgb(210,205,23)" rx="2" ry="2" />
<text  x="244.41" y="191.5" >inter..</text>
</g>
<g >
<title>runtime.jmpdefer (2 samples, 0.01%)</title><rect x="97.6" y="309" width="0.1" height="15.0" fill="rgb(217,181,36)" rx="2" ry="2" />
<text  x="100.58" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.02%)</title><rect x="220.6" y="245" width="0.2" height="15.0" fill="rgb(253,175,22)" rx="2" ry="2" />
<text  x="223.57" y="255.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (3 samples, 0.02%)</title><rect x="16.1" y="389" width="0.2" height="15.0" fill="rgb(242,0,53)" rx="2" ry="2" />
<text  x="19.13" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (161 samples, 0.93%)</title><rect x="337.0" y="357" width="11.0" height="15.0" fill="rgb(225,139,45)" rx="2" ry="2" />
<text  x="340.02" y="367.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.01%)</title><rect x="462.3" y="373" width="0.2" height="15.0" fill="rgb(220,145,52)" rx="2" ry="2" />
<text  x="465.33" y="383.5" ></text>
</g>
<g >
<title>runtime.usleep (6 samples, 0.03%)</title><rect x="1181.9" y="293" width="0.4" height="15.0" fill="rgb(254,171,17)" rx="2" ry="2" />
<text  x="1184.90" y="303.5" ></text>
</g>
<g >
<title>fmt.(*pp).free (5 samples, 0.03%)</title><rect x="295.0" y="245" width="0.3" height="15.0" fill="rgb(217,154,22)" rx="2" ry="2" />
<text  x="298.01" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (7 samples, 0.04%)</title><rect x="202.6" y="165" width="0.5" height="15.0" fill="rgb(232,96,12)" rx="2" ry="2" />
<text  x="205.59" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 0.02%)</title><rect x="475.5" y="309" width="0.2" height="15.0" fill="rgb(215,184,34)" rx="2" ry="2" />
<text  x="478.48" y="319.5" ></text>
</g>
<g >
<title>reflect.ValueOf (14 samples, 0.08%)</title><rect x="87.7" y="325" width="1.0" height="15.0" fill="rgb(218,193,24)" rx="2" ry="2" />
<text  x="90.70" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.02%)</title><rect x="220.6" y="293" width="0.2" height="15.0" fill="rgb(224,205,44)" rx="2" ry="2" />
<text  x="223.57" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (15 samples, 0.09%)</title><rect x="202.2" y="213" width="1.0" height="15.0" fill="rgb(246,215,34)" rx="2" ry="2" />
<text  x="205.18" y="223.5" ></text>
</g>
<g >
<title>runtime.newdefer (39 samples, 0.23%)</title><rect x="90.1" y="309" width="2.6" height="15.0" fill="rgb(208,145,9)" rx="2" ry="2" />
<text  x="93.09" y="319.5" ></text>
</g>
<g >
<title>runtime.semasleep (11 samples, 0.06%)</title><rect x="1189.1" y="357" width="0.8" height="15.0" fill="rgb(221,71,42)" rx="2" ry="2" />
<text  x="1192.11" y="367.5" ></text>
</g>
<g >
<title>runtime.semasleep (82 samples, 0.47%)</title><rect x="476.6" y="309" width="5.6" height="15.0" fill="rgb(232,119,35)" rx="2" ry="2" />
<text  x="479.63" y="319.5" ></text>
</g>
<g >
<title>runtime.return0 (23 samples, 0.13%)</title><rect x="305.2" y="277" width="1.6" height="15.0" fill="rgb(229,48,25)" rx="2" ry="2" />
<text  x="308.22" y="287.5" ></text>
</g>
<g >
<title>runtime.schedule (188 samples, 1.09%)</title><rect x="460.7" y="405" width="12.8" height="15.0" fill="rgb(249,84,29)" rx="2" ry="2" />
<text  x="463.70" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (2 samples, 0.01%)</title><rect x="241.8" y="149" width="0.1" height="15.0" fill="rgb(234,174,41)" rx="2" ry="2" />
<text  x="244.75" y="159.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (2 samples, 0.01%)</title><rect x="10.7" y="309" width="0.1" height="15.0" fill="rgb(210,57,6)" rx="2" ry="2" />
<text  x="13.68" y="319.5" ></text>
</g>
<g >
<title>runtime.deferproc (3 samples, 0.02%)</title><rect x="241.9" y="165" width="0.2" height="15.0" fill="rgb(250,27,14)" rx="2" ry="2" />
<text  x="244.89" y="175.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (28 samples, 0.16%)</title><rect x="344.9" y="261" width="1.9" height="15.0" fill="rgb(216,152,38)" rx="2" ry="2" />
<text  x="347.92" y="271.5" ></text>
</g>
<g >
<title>sync.runtime_procUnpin (3 samples, 0.02%)</title><rect x="224.9" y="309" width="0.2" height="15.0" fill="rgb(210,106,20)" rx="2" ry="2" />
<text  x="227.86" y="319.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader.func1 (2 samples, 0.01%)</title><rect x="296.4" y="245" width="0.1" height="15.0" fill="rgb(244,128,46)" rx="2" ry="2" />
<text  x="299.37" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (3 samples, 0.02%)</title><rect x="303.1" y="261" width="0.2" height="15.0" fill="rgb(208,74,41)" rx="2" ry="2" />
<text  x="306.11" y="271.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (24 samples, 0.14%)</title><rect x="220.8" y="293" width="1.6" height="15.0" fill="rgb(208,175,50)" rx="2" ry="2" />
<text  x="223.78" y="303.5" ></text>
</g>
<g >
<title>runtime.gcDrain (22 samples, 0.13%)</title><rect x="1182.3" y="389" width="1.5" height="15.0" fill="rgb(251,64,4)" rx="2" ry="2" />
<text  x="1185.30" y="399.5" ></text>
</g>
<g >
<title>runtime.markroot (6 samples, 0.03%)</title><rect x="1181.9" y="357" width="0.4" height="15.0" fill="rgb(241,103,34)" rx="2" ry="2" />
<text  x="1184.90" y="367.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (8 samples, 0.05%)</title><rect x="66.3" y="261" width="0.5" height="15.0" fill="rgb(215,157,22)" rx="2" ry="2" />
<text  x="69.25" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.01%)</title><rect x="15.4" y="341" width="0.1" height="15.0" fill="rgb(251,10,46)" rx="2" ry="2" />
<text  x="18.38" y="351.5" ></text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (4,804 samples, 27.73%)</title><rect x="20.8" y="389" width="327.2" height="15.0" fill="rgb(254,152,51)" rx="2" ry="2" />
<text  x="23.83" y="399.5" >net/http.HandlerFunc.ServeHTTP</text>
</g>
<g >
<title>sync.(*Mutex).Lock (18 samples, 0.10%)</title><rect x="214.5" y="309" width="1.2" height="15.0" fill="rgb(247,153,52)" rx="2" ry="2" />
<text  x="217.51" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (11 samples, 0.06%)</title><rect x="106.6" y="309" width="0.8" height="15.0" fill="rgb(232,184,16)" rx="2" ry="2" />
<text  x="109.64" y="319.5" ></text>
</g>
<g >
<title>net/http.DetectContentType (8 samples, 0.05%)</title><rect x="296.5" y="245" width="0.5" height="15.0" fill="rgb(239,3,49)" rx="2" ry="2" />
<text  x="299.50" y="255.5" ></text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.02%)</title><rect x="482.2" y="357" width="0.2" height="15.0" fill="rgb(222,225,35)" rx="2" ry="2" />
<text  x="485.22" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.02%)</title><rect x="312.2" y="245" width="0.2" height="15.0" fill="rgb(247,229,18)" rx="2" ry="2" />
<text  x="315.17" y="255.5" ></text>
</g>
<g >
<title>net/url.ParseRequestURI (3 samples, 0.02%)</title><rect x="15.3" y="389" width="0.2" height="15.0" fill="rgb(232,190,17)" rx="2" ry="2" />
<text  x="18.31" y="399.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.01%)</title><rect x="1181.8" y="245" width="0.1" height="15.0" fill="rgb(211,104,41)" rx="2" ry="2" />
<text  x="1184.76" y="255.5" ></text>
</g>
<g >
<title>runtime.acquirem (4 samples, 0.02%)</title><rect x="328.5" y="325" width="0.3" height="15.0" fill="rgb(216,110,7)" rx="2" ry="2" />
<text  x="331.51" y="335.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.01%)</title><rect x="483.0" y="261" width="0.2" height="15.0" fill="rgb(236,211,16)" rx="2" ry="2" />
<text  x="486.04" y="271.5" ></text>
</g>
<g >
<title>runtime.handoff (2 samples, 0.01%)</title><rect x="1181.8" y="341" width="0.1" height="15.0" fill="rgb(218,197,16)" rx="2" ry="2" />
<text  x="1184.76" y="351.5" ></text>
</g>
<g >
<title>runtime.netpoll (126 samples, 0.73%)</title><rect x="462.5" y="373" width="8.5" height="15.0" fill="rgb(221,39,16)" rx="2" ry="2" />
<text  x="465.47" y="383.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (22 samples, 0.13%)</title><rect x="100.2" y="309" width="1.5" height="15.0" fill="rgb(208,95,17)" rx="2" ry="2" />
<text  x="103.17" y="319.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (3 samples, 0.02%)</title><rect x="220.6" y="197" width="0.2" height="15.0" fill="rgb(233,54,44)" rx="2" ry="2" />
<text  x="223.57" y="207.5" ></text>
</g>
<g >
<title>net/http.bodyAllowedForStatus (9 samples, 0.05%)</title><rect x="317.1" y="293" width="0.6" height="15.0" fill="rgb(213,189,40)" rx="2" ry="2" />
<text  x="320.07" y="303.5" ></text>
</g>
<g >
<title>all (17,327 samples, 100%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(209,145,35)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.01%)</title><rect x="343.6" y="245" width="0.1" height="15.0" fill="rgb(218,140,1)" rx="2" ry="2" />
<text  x="346.56" y="255.5" ></text>
</g>
<g >
<title>runtime.notesleep (9 samples, 0.05%)</title><rect x="472.2" y="357" width="0.6" height="15.0" fill="rgb(251,140,1)" rx="2" ry="2" />
<text  x="475.21" y="367.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (72 samples, 0.42%)</title><rect x="212.5" y="325" width="4.9" height="15.0" fill="rgb(231,55,16)" rx="2" ry="2" />
<text  x="215.53" y="335.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (63 samples, 0.36%)</title><rect x="348.0" y="437" width="4.3" height="15.0" fill="rgb(237,110,17)" rx="2" ry="2" />
<text  x="350.99" y="447.5" ></text>
</g>
<g >
<title>net/http.Header.WriteSubset (3 samples, 0.02%)</title><rect x="297.0" y="245" width="0.3" height="15.0" fill="rgb(245,89,32)" rx="2" ry="2" />
<text  x="300.05" y="255.5" ></text>
</g>
<g >
<title>net/http.(*maskedSig).match (4 samples, 0.02%)</title><rect x="296.6" y="229" width="0.2" height="15.0" fill="rgb(245,169,27)" rx="2" ry="2" />
<text  x="299.57" y="239.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (8 samples, 0.05%)</title><rect x="291.5" y="85" width="0.5" height="15.0" fill="rgb(230,61,33)" rx="2" ry="2" />
<text  x="294.46" y="95.5" ></text>
</g>
<g >
<title>runtime.startm (10,250 samples, 59.16%)</title><rect x="483.6" y="373" width="698.0" height="15.0" fill="rgb(216,122,43)" rx="2" ry="2" />
<text  x="486.58" y="383.5" >runtime.startm</text>
</g>
<g >
<title>runtime.gcWriteBarrier (2 samples, 0.01%)</title><rect x="322.7" y="341" width="0.1" height="15.0" fill="rgb(223,216,23)" rx="2" ry="2" />
<text  x="325.66" y="351.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal_trampoline (2 samples, 0.01%)</title><rect x="353.0" y="421" width="0.1" height="15.0" fill="rgb(254,73,0)" rx="2" ry="2" />
<text  x="355.96" y="431.5" ></text>
</g>
<g >
<title>runtime.stopm (83 samples, 0.48%)</title><rect x="476.6" y="341" width="5.6" height="15.0" fill="rgb(239,100,15)" rx="2" ry="2" />
<text  x="479.57" y="351.5" ></text>
</g>
<g >
<title>fmt.Fprintf (48 samples, 0.28%)</title><rect x="293.0" y="261" width="3.3" height="15.0" fill="rgb(253,98,5)" rx="2" ry="2" />
<text  x="296.03" y="271.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.01%)</title><rect x="483.4" y="373" width="0.2" height="15.0" fill="rgb(234,113,49)" rx="2" ry="2" />
<text  x="486.44" y="383.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (30 samples, 0.17%)</title><rect x="344.8" y="277" width="2.0" height="15.0" fill="rgb(247,43,34)" rx="2" ry="2" />
<text  x="347.79" y="287.5" ></text>
</g>
<g >
<title>runtime.scanstack (11 samples, 0.06%)</title><rect x="345.3" y="197" width="0.8" height="15.0" fill="rgb(231,167,42)" rx="2" ry="2" />
<text  x="348.33" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (5 samples, 0.03%)</title><rect x="57.5" y="245" width="0.4" height="15.0" fill="rgb(217,148,30)" rx="2" ry="2" />
<text  x="60.54" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (2 samples, 0.01%)</title><rect x="346.7" y="245" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="349.70" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (2 samples, 0.01%)</title><rect x="483.0" y="325" width="0.2" height="15.0" fill="rgb(218,195,37)" rx="2" ry="2" />
<text  x="486.04" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (745 samples, 4.30%)</title><rect x="241.3" y="197" width="50.8" height="15.0" fill="rgb(229,174,31)" rx="2" ry="2" />
<text  x="244.34" y="207.5" >net.(..</text>
</g>
<g >
<title>internal/poll.(*FD).Read (36 samples, 0.21%)</title><rect x="349.7" y="389" width="2.4" height="15.0" fill="rgb(230,145,20)" rx="2" ry="2" />
<text  x="352.69" y="399.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.02%)</title><rect x="482.2" y="341" width="0.2" height="15.0" fill="rgb(208,132,13)" rx="2" ry="2" />
<text  x="485.22" y="351.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (60 samples, 0.35%)</title><rect x="1183.8" y="325" width="4.1" height="15.0" fill="rgb(240,8,39)" rx="2" ry="2" />
<text  x="1186.80" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (6 samples, 0.03%)</title><rect x="483.0" y="389" width="0.4" height="15.0" fill="rgb(209,47,34)" rx="2" ry="2" />
<text  x="486.04" y="399.5" ></text>
</g>
<g >
<title>net/http.Header.writeSubset (3 samples, 0.02%)</title><rect x="297.0" y="229" width="0.3" height="15.0" fill="rgb(243,179,28)" rx="2" ry="2" />
<text  x="300.05" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (1,474 samples, 8.51%)</title><rect x="359.8" y="421" width="100.4" height="15.0" fill="rgb(235,106,14)" rx="2" ry="2" />
<text  x="362.84" y="431.5" >runtime.exit..</text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.01%)</title><rect x="352.1" y="373" width="0.2" height="15.0" fill="rgb(238,158,31)" rx="2" ry="2" />
<text  x="355.14" y="383.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (4 samples, 0.02%)</title><rect x="114.4" y="309" width="0.3" height="15.0" fill="rgb(225,26,43)" rx="2" ry="2" />
<text  x="117.40" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (3 samples, 0.02%)</title><rect x="343.7" y="309" width="0.2" height="15.0" fill="rgb(228,142,5)" rx="2" ry="2" />
<text  x="346.70" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (16 samples, 0.09%)</title><rect x="113.6" y="325" width="1.1" height="15.0" fill="rgb(230,128,45)" rx="2" ry="2" />
<text  x="116.58" y="335.5" ></text>
</g>
<g >
<title>runtime.scanobject (36 samples, 0.21%)</title><rect x="357.4" y="373" width="2.4" height="15.0" fill="rgb(229,143,2)" rx="2" ry="2" />
<text  x="360.39" y="383.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (15 samples, 0.09%)</title><rect x="202.2" y="229" width="1.0" height="15.0" fill="rgb(205,108,29)" rx="2" ry="2" />
<text  x="205.18" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.01%)</title><rect x="10.7" y="325" width="0.1" height="15.0" fill="rgb(215,88,43)" rx="2" ry="2" />
<text  x="13.68" y="335.5" ></text>
</g>
<g >
<title>runtime.freedefer (3 samples, 0.02%)</title><rect x="349.8" y="357" width="0.2" height="15.0" fill="rgb(253,161,49)" rx="2" ry="2" />
<text  x="352.76" y="367.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (2 samples, 0.01%)</title><rect x="334.6" y="293" width="0.2" height="15.0" fill="rgb(216,53,10)" rx="2" ry="2" />
<text  x="337.64" y="303.5" ></text>
</g>
<g >
<title>net/http.(*Request).wantsClose (2 samples, 0.01%)</title><rect x="10.4" y="405" width="0.1" height="15.0" fill="rgb(245,183,1)" rx="2" ry="2" />
<text  x="13.41" y="415.5" ></text>
</g>
<g >
<title>runtime.runqgrab (2 samples, 0.01%)</title><rect x="361.1" y="357" width="0.1" height="15.0" fill="rgb(247,138,35)" rx="2" ry="2" />
<text  x="364.06" y="367.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (4,963 samples, 28.64%)</title><rect x="10.0" y="437" width="338.0" height="15.0" fill="rgb(251,30,4)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.01%)</title><rect x="483.4" y="357" width="0.2" height="15.0" fill="rgb(224,100,0)" rx="2" ry="2" />
<text  x="486.44" y="367.5" ></text>
</g>
<g >
<title>runtime.procPin (3 samples, 0.02%)</title><rect x="101.5" y="277" width="0.2" height="15.0" fill="rgb(244,74,5)" rx="2" ry="2" />
<text  x="104.46" y="287.5" ></text>
</g>
<g >
<title>context.WithCancel (3 samples, 0.02%)</title><rect x="10.2" y="405" width="0.2" height="15.0" fill="rgb(214,223,11)" rx="2" ry="2" />
<text  x="13.20" y="415.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.02%)</title><rect x="214.1" y="277" width="0.2" height="15.0" fill="rgb(249,135,25)" rx="2" ry="2" />
<text  x="217.10" y="287.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (12 samples, 0.07%)</title><rect x="1189.1" y="405" width="0.8" height="15.0" fill="rgb(220,62,2)" rx="2" ry="2" />
<text  x="1192.11" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (209 samples, 1.21%)</title><rect x="322.8" y="341" width="14.2" height="15.0" fill="rgb(222,124,48)" rx="2" ry="2" />
<text  x="325.79" y="351.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (2 samples, 0.01%)</title><rect x="344.7" y="309" width="0.1" height="15.0" fill="rgb(233,73,12)" rx="2" ry="2" />
<text  x="347.65" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (3 samples, 0.02%)</title><rect x="296.0" y="213" width="0.2" height="15.0" fill="rgb(244,83,14)" rx="2" ry="2" />
<text  x="298.96" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (7 samples, 0.04%)</title><rect x="1188.6" y="341" width="0.4" height="15.0" fill="rgb(214,23,53)" rx="2" ry="2" />
<text  x="1191.57" y="351.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (11 samples, 0.06%)</title><rect x="294.3" y="229" width="0.7" height="15.0" fill="rgb(246,146,26)" rx="2" ry="2" />
<text  x="297.26" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).reclaimChunk (2 samples, 0.01%)</title><rect x="483.0" y="357" width="0.2" height="15.0" fill="rgb(246,221,11)" rx="2" ry="2" />
<text  x="486.04" y="367.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.02%)</title><rect x="473.3" y="373" width="0.2" height="15.0" fill="rgb(205,163,15)" rx="2" ry="2" />
<text  x="476.30" y="383.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (30 samples, 0.17%)</title><rect x="344.8" y="293" width="2.0" height="15.0" fill="rgb(246,66,18)" rx="2" ry="2" />
<text  x="347.79" y="303.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (10 samples, 0.06%)</title><rect x="216.6" y="293" width="0.6" height="15.0" fill="rgb(218,212,45)" rx="2" ry="2" />
<text  x="219.55" y="303.5" ></text>
</g>
<g >
<title>strconv.AppendInt (105 samples, 0.61%)</title><rect x="57.9" y="261" width="7.1" height="15.0" fill="rgb(247,229,5)" rx="2" ry="2" />
<text  x="60.88" y="271.5" ></text>
</g>
<g >
<title>runtime.scanobject (9 samples, 0.05%)</title><rect x="346.1" y="245" width="0.6" height="15.0" fill="rgb(212,9,49)" rx="2" ry="2" />
<text  x="349.08" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.05%)</title><rect x="291.5" y="101" width="0.5" height="15.0" fill="rgb(209,220,20)" rx="2" ry="2" />
<text  x="294.46" y="111.5" ></text>
</g>
<g >
<title>runtime.scang (37 samples, 0.21%)</title><rect x="354.9" y="341" width="2.5" height="15.0" fill="rgb(209,65,53)" rx="2" ry="2" />
<text  x="357.87" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (30 samples, 0.17%)</title><rect x="344.8" y="309" width="2.0" height="15.0" fill="rgb(219,178,36)" rx="2" ry="2" />
<text  x="347.79" y="319.5" ></text>
</g>
<g >
<title>net.(*conn).SetReadDeadline (3 samples, 0.02%)</title><rect x="15.9" y="405" width="0.2" height="15.0" fill="rgb(224,19,29)" rx="2" ry="2" />
<text  x="18.92" y="415.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (64 samples, 0.37%)</title><rect x="16.1" y="421" width="4.4" height="15.0" fill="rgb(248,174,24)" rx="2" ry="2" />
<text  x="19.13" y="431.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.02%)</title><rect x="482.2" y="325" width="0.2" height="15.0" fill="rgb(241,43,21)" rx="2" ry="2" />
<text  x="485.22" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (3 samples, 0.02%)</title><rect x="214.1" y="213" width="0.2" height="15.0" fill="rgb(225,90,29)" rx="2" ry="2" />
<text  x="217.10" y="223.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.01%)</title><rect x="359.8" y="405" width="0.2" height="15.0" fill="rgb(250,177,32)" rx="2" ry="2" />
<text  x="362.84" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.02%)</title><rect x="15.0" y="357" width="0.2" height="15.0" fill="rgb(249,118,11)" rx="2" ry="2" />
<text  x="18.04" y="367.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (13 samples, 0.08%)</title><rect x="109.5" y="325" width="0.9" height="15.0" fill="rgb(219,0,1)" rx="2" ry="2" />
<text  x="112.50" y="335.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (13 samples, 0.08%)</title><rect x="356.1" y="277" width="0.9" height="15.0" fill="rgb(237,119,30)" rx="2" ry="2" />
<text  x="359.09" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (2 samples, 0.01%)</title><rect x="483.0" y="341" width="0.2" height="15.0" fill="rgb(227,21,38)" rx="2" ry="2" />
<text  x="486.04" y="351.5" ></text>
</g>
<g >
<title>net/http.Header.sortedKeyValues (3 samples, 0.02%)</title><rect x="297.0" y="213" width="0.3" height="15.0" fill="rgb(248,47,39)" rx="2" ry="2" />
<text  x="300.05" y="223.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (37 samples, 0.21%)</title><rect x="354.9" y="357" width="2.5" height="15.0" fill="rgb(231,128,53)" rx="2" ry="2" />
<text  x="357.87" y="367.5" ></text>
</g>
<g >
<title>reflect.escapes (2 samples, 0.01%)</title><rect x="88.0" y="309" width="0.1" height="15.0" fill="rgb(252,193,11)" rx="2" ry="2" />
<text  x="90.98" y="319.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (7 samples, 0.04%)</title><rect x="92.3" y="229" width="0.4" height="15.0" fill="rgb(226,49,21)" rx="2" ry="2" />
<text  x="95.27" y="239.5" ></text>
</g>
<g >
<title>reflect.Value.Type (10 samples, 0.06%)</title><rect x="87.0" y="293" width="0.7" height="15.0" fill="rgb(225,184,35)" rx="2" ry="2" />
<text  x="90.02" y="303.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (7 samples, 0.04%)</title><rect x="482.4" y="357" width="0.5" height="15.0" fill="rgb(248,152,54)" rx="2" ry="2" />
<text  x="485.42" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal.func1 (43 samples, 0.25%)</title><rect x="32.1" y="325" width="2.9" height="15.0" fill="rgb(212,34,2)" rx="2" ry="2" />
<text  x="35.06" y="335.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (4 samples, 0.02%)</title><rect x="361.2" y="325" width="0.3" height="15.0" fill="rgb(248,191,23)" rx="2" ry="2" />
<text  x="364.20" y="335.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (60 samples, 0.35%)</title><rect x="16.3" y="341" width="4.1" height="15.0" fill="rgb(207,185,34)" rx="2" ry="2" />
<text  x="19.33" y="351.5" ></text>
</g>
<g >
<title>fmt.(*buffer).Write (3 samples, 0.02%)</title><rect x="294.8" y="165" width="0.2" height="15.0" fill="rgb(227,107,31)" rx="2" ry="2" />
<text  x="297.80" y="175.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (7 samples, 0.04%)</title><rect x="209.9" y="309" width="0.5" height="15.0" fill="rgb(205,4,34)" rx="2" ry="2" />
<text  x="212.95" y="319.5" ></text>
</g>
<g >
<title>runtime.pcvalue (6 samples, 0.03%)</title><rect x="355.5" y="277" width="0.5" height="15.0" fill="rgb(235,220,30)" rx="2" ry="2" />
<text  x="358.55" y="287.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (5 samples, 0.03%)</title><rect x="212.2" y="325" width="0.3" height="15.0" fill="rgb(230,113,11)" rx="2" ry="2" />
<text  x="215.19" y="335.5" ></text>
</g>
<g >
<title>runtime.walltime (2 samples, 0.01%)</title><rect x="297.5" y="213" width="0.2" height="15.0" fill="rgb(212,146,5)" rx="2" ry="2" />
<text  x="300.53" y="223.5" ></text>
</g>
<g >
<title>syscall.Write (32 samples, 0.18%)</title><rect x="18.2" y="325" width="2.2" height="15.0" fill="rgb(218,128,50)" rx="2" ry="2" />
<text  x="21.24" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (79 samples, 0.46%)</title><rect x="354.5" y="421" width="5.3" height="15.0" fill="rgb(247,11,17)" rx="2" ry="2" />
<text  x="357.46" y="431.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (17 samples, 0.10%)</title><rect x="214.6" y="293" width="1.1" height="15.0" fill="rgb(227,67,17)" rx="2" ry="2" />
<text  x="217.58" y="303.5" ></text>
</g>
<g >
<title>runtime.deferproc (75 samples, 0.43%)</title><rect x="301.7" y="293" width="5.1" height="15.0" fill="rgb(210,29,31)" rx="2" ry="2" />
<text  x="304.68" y="303.5" ></text>
</g>
<g >
<title>syscall.syscall (32 samples, 0.18%)</title><rect x="350.0" y="341" width="2.1" height="15.0" fill="rgb(237,19,48)" rx="2" ry="2" />
<text  x="352.96" y="351.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (54 samples, 0.31%)</title><rect x="82.3" y="245" width="3.7" height="15.0" fill="rgb(254,91,17)" rx="2" ry="2" />
<text  x="85.32" y="255.5" ></text>
</g>
<g >
<title>net.(*conn).Read (38 samples, 0.22%)</title><rect x="349.7" y="421" width="2.6" height="15.0" fill="rgb(230,179,19)" rx="2" ry="2" />
<text  x="352.69" y="431.5" ></text>
</g>
<g >
<title>net/http.readTransfer (3 samples, 0.02%)</title><rect x="10.8" y="389" width="0.2" height="15.0" fill="rgb(243,106,6)" rx="2" ry="2" />
<text  x="13.82" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.01%)</title><rect x="352.1" y="405" width="0.2" height="15.0" fill="rgb(244,65,44)" rx="2" ry="2" />
<text  x="355.14" y="415.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (766 samples, 4.42%)</title><rect x="240.9" y="261" width="52.1" height="15.0" fill="rgb(237,27,30)" rx="2" ry="2" />
<text  x="243.87" y="271.5" >bufio..</text>
</g>
<g >
<title>sync.(*Mutex).Unlock (38 samples, 0.22%)</title><rect x="314.1" y="293" width="2.6" height="15.0" fill="rgb(241,110,27)" rx="2" ry="2" />
<text  x="317.14" y="303.5" ></text>
</g>
<g >
<title>runtime.semawakeup (10,232 samples, 59.05%)</title><rect x="484.7" y="341" width="696.9" height="15.0" fill="rgb(233,102,53)" rx="2" ry="2" />
<text  x="487.74" y="351.5" >runtime.semawakeup</text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (7 samples, 0.04%)</title><rect x="1188.1" y="405" width="0.5" height="15.0" fill="rgb(217,121,14)" rx="2" ry="2" />
<text  x="1191.09" y="415.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (3 samples, 0.02%)</title><rect x="220.6" y="213" width="0.2" height="15.0" fill="rgb(240,174,53)" rx="2" ry="2" />
<text  x="223.57" y="223.5" ></text>
</g>
<g >
<title>net/http.(*response).bodyAllowed (14 samples, 0.08%)</title><rect x="316.7" y="309" width="1.0" height="15.0" fill="rgb(209,85,25)" rx="2" ry="2" />
<text  x="319.73" y="319.5" ></text>
</g>
<g >
<title>fmt.newPrinter (14 samples, 0.08%)</title><rect x="295.3" y="245" width="1.0" height="15.0" fill="rgb(240,88,53)" rx="2" ry="2" />
<text  x="298.35" y="255.5" ></text>
</g>
<g >
<title>runtime.kevent (2 samples, 0.01%)</title><rect x="475.3" y="325" width="0.2" height="15.0" fill="rgb(222,45,45)" rx="2" ry="2" />
<text  x="478.34" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.02%)</title><rect x="303.1" y="245" width="0.2" height="15.0" fill="rgb(225,126,47)" rx="2" ry="2" />
<text  x="306.11" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (4 samples, 0.02%)</title><rect x="475.1" y="357" width="0.2" height="15.0" fill="rgb(253,14,42)" rx="2" ry="2" />
<text  x="478.07" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (142 samples, 0.82%)</title><rect x="76.4" y="261" width="9.7" height="15.0" fill="rgb(227,141,5)" rx="2" ry="2" />
<text  x="79.40" y="271.5" ></text>
</g>
<g >
<title>runtime.mapassign (2 samples, 0.01%)</title><rect x="10.2" y="373" width="0.1" height="15.0" fill="rgb(241,221,15)" rx="2" ry="2" />
<text  x="13.20" y="383.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.02%)</title><rect x="15.0" y="341" width="0.2" height="15.0" fill="rgb(234,37,31)" rx="2" ry="2" />
<text  x="18.04" y="351.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (843 samples, 4.87%)</title><rect x="240.5" y="277" width="57.4" height="15.0" fill="rgb(245,108,41)" rx="2" ry="2" />
<text  x="243.46" y="287.5" >net/ht..</text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.02%)</title><rect x="482.6" y="341" width="0.3" height="15.0" fill="rgb(242,61,42)" rx="2" ry="2" />
<text  x="485.63" y="351.5" ></text>
</g>
<g >
<title>runtime.gomcache (2 samples, 0.01%)</title><rect x="329.0" y="325" width="0.1" height="15.0" fill="rgb(214,158,32)" rx="2" ry="2" />
<text  x="331.99" y="335.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (3 samples, 0.02%)</title><rect x="296.0" y="197" width="0.2" height="15.0" fill="rgb(239,112,19)" rx="2" ry="2" />
<text  x="298.96" y="207.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (138 samples, 0.80%)</title><rect x="473.5" y="389" width="9.4" height="15.0" fill="rgb(252,78,49)" rx="2" ry="2" />
<text  x="476.50" y="399.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (57 samples, 0.33%)</title><rect x="11.2" y="277" width="3.8" height="15.0" fill="rgb(237,56,1)" rx="2" ry="2" />
<text  x="14.16" y="287.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Reset (4 samples, 0.02%)</title><rect x="28.8" y="341" width="0.3" height="15.0" fill="rgb(218,187,29)" rx="2" ry="2" />
<text  x="31.80" y="351.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (10 samples, 0.06%)</title><rect x="347.1" y="325" width="0.7" height="15.0" fill="rgb(233,209,39)" rx="2" ry="2" />
<text  x="350.10" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrain (79 samples, 0.46%)</title><rect x="354.5" y="389" width="5.3" height="15.0" fill="rgb(251,82,13)" rx="2" ry="2" />
<text  x="357.46" y="399.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (221 samples, 1.28%)</title><rect x="72.0" y="293" width="15.0" height="15.0" fill="rgb(219,154,41)" rx="2" ry="2" />
<text  x="74.97" y="303.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (16 samples, 0.09%)</title><rect x="319.8" y="325" width="1.1" height="15.0" fill="rgb(211,101,0)" rx="2" ry="2" />
<text  x="322.80" y="335.5" ></text>
</g>
<g >
<title>runtime.freedefer (25 samples, 0.14%)</title><rect x="11.2" y="229" width="1.7" height="15.0" fill="rgb(224,83,25)" rx="2" ry="2" />
<text  x="14.16" y="239.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (2 samples, 0.01%)</title><rect x="297.1" y="197" width="0.2" height="15.0" fill="rgb(221,76,15)" rx="2" ry="2" />
<text  x="300.12" y="207.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteByte (84 samples, 0.48%)</title><rect x="45.7" y="277" width="5.7" height="15.0" fill="rgb(222,148,43)" rx="2" ry="2" />
<text  x="48.69" y="287.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (6 samples, 0.03%)</title><rect x="345.5" y="165" width="0.4" height="15.0" fill="rgb(249,107,40)" rx="2" ry="2" />
<text  x="348.47" y="175.5" ></text>
</g>
<g >
<title>encoding/json.intEncoder (158 samples, 0.91%)</title><rect x="54.3" y="277" width="10.7" height="15.0" fill="rgb(243,151,17)" rx="2" ry="2" />
<text  x="57.27" y="287.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (6 samples, 0.03%)</title><rect x="210.0" y="293" width="0.4" height="15.0" fill="rgb(220,71,42)" rx="2" ry="2" />
<text  x="213.02" y="303.5" ></text>
</g>
<g >
<title>runtime.nanotime (10 samples, 0.06%)</title><rect x="222.5" y="261" width="0.7" height="15.0" fill="rgb(247,28,2)" rx="2" ry="2" />
<text  x="225.48" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (14 samples, 0.08%)</title><rect x="327.4" y="293" width="1.0" height="15.0" fill="rgb(239,0,36)" rx="2" ry="2" />
<text  x="330.42" y="303.5" ></text>
</g>
<g >
<title>runtime.osyield (22 samples, 0.13%)</title><rect x="473.6" y="357" width="1.5" height="15.0" fill="rgb(225,128,6)" rx="2" ry="2" />
<text  x="476.57" y="367.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).ServeHTTP (4,808 samples, 27.75%)</title><rect x="20.6" y="405" width="327.4" height="15.0" fill="rgb(241,39,46)" rx="2" ry="2" />
<text  x="23.56" y="415.5" >net/http.(*ServeMux).ServeHTTP</text>
</g>
<g >
<title>runtime.gcstopm (2 samples, 0.01%)</title><rect x="473.0" y="389" width="0.2" height="15.0" fill="rgb(229,95,27)" rx="2" ry="2" />
<text  x="476.02" y="399.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (36 samples, 0.21%)</title><rect x="349.7" y="405" width="2.4" height="15.0" fill="rgb(250,75,46)" rx="2" ry="2" />
<text  x="352.69" y="415.5" ></text>
</g>
<g >
<title>fmt.Fprintln (2,977 samples, 17.18%)</title><rect x="114.9" y="357" width="202.8" height="15.0" fill="rgb(240,32,4)" rx="2" ry="2" />
<text  x="117.94" y="367.5" >fmt.Fprintln</text>
</g>
<g >
<title>runtime.usleep (21 samples, 0.12%)</title><rect x="1182.4" y="309" width="1.4" height="15.0" fill="rgb(206,141,5)" rx="2" ry="2" />
<text  x="1185.37" y="319.5" ></text>
</g>
<g >
<title>runtime.semasleep (60 samples, 0.35%)</title><rect x="1183.8" y="341" width="4.1" height="15.0" fill="rgb(251,31,22)" rx="2" ry="2" />
<text  x="1186.80" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (3 samples, 0.02%)</title><rect x="327.8" y="229" width="0.2" height="15.0" fill="rgb(237,188,34)" rx="2" ry="2" />
<text  x="330.83" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.01%)</title><rect x="15.4" y="357" width="0.1" height="15.0" fill="rgb(205,70,53)" rx="2" ry="2" />
<text  x="18.38" y="367.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (22 samples, 0.13%)</title><rect x="1182.3" y="405" width="1.5" height="15.0" fill="rgb(240,204,28)" rx="2" ry="2" />
<text  x="1185.30" y="415.5" ></text>
</g>
<g >
<title>runtime.freedefer (26 samples, 0.15%)</title><rect x="95.7" y="309" width="1.7" height="15.0" fill="rgb(205,121,35)" rx="2" ry="2" />
<text  x="98.67" y="319.5" ></text>
</g>
<g >
<title>runtime.notetsleep (60 samples, 0.35%)</title><rect x="1183.8" y="373" width="4.1" height="15.0" fill="rgb(242,153,30)" rx="2" ry="2" />
<text  x="1186.80" y="383.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.01%)</title><rect x="356.8" y="245" width="0.2" height="15.0" fill="rgb(246,69,46)" rx="2" ry="2" />
<text  x="359.84" y="255.5" ></text>
</g>
<g >
<title>runtime.deferproc (61 samples, 0.35%)</title><rect x="88.7" y="325" width="4.1" height="15.0" fill="rgb(209,229,6)" rx="2" ry="2" />
<text  x="91.66" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (9 samples, 0.05%)</title><rect x="327.4" y="261" width="0.6" height="15.0" fill="rgb(240,181,17)" rx="2" ry="2" />
<text  x="330.42" y="271.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (750 samples, 4.33%)</title><rect x="241.0" y="245" width="51.1" height="15.0" fill="rgb(217,132,30)" rx="2" ry="2" />
<text  x="244.00" y="255.5" >bufio..</text>
</g>
<g >
<title>runtime.notesleep (4 samples, 0.02%)</title><rect x="361.2" y="357" width="0.3" height="15.0" fill="rgb(216,95,46)" rx="2" ry="2" />
<text  x="364.20" y="367.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (39 samples, 0.23%)</title><rect x="67.0" y="293" width="2.7" height="15.0" fill="rgb(247,138,39)" rx="2" ry="2" />
<text  x="70.00" y="303.5" ></text>
</g>
<g >
<title>runtime.deferreturn (4 samples, 0.02%)</title><rect x="349.7" y="373" width="0.3" height="15.0" fill="rgb(222,188,5)" rx="2" ry="2" />
<text  x="352.69" y="383.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (61 samples, 0.35%)</title><rect x="11.1" y="389" width="4.1" height="15.0" fill="rgb(233,217,46)" rx="2" ry="2" />
<text  x="14.09" y="399.5" ></text>
</g>
<g >
<title>runtime.stopm (1,446 samples, 8.35%)</title><rect x="361.7" y="405" width="98.5" height="15.0" fill="rgb(233,64,26)" rx="2" ry="2" />
<text  x="364.68" y="415.5" >runtime.stopm</text>
</g>
<g >
<title>runtime.mallocgc (120 samples, 0.69%)</title><rect x="339.8" y="341" width="8.2" height="15.0" fill="rgb(224,96,2)" rx="2" ry="2" />
<text  x="342.82" y="351.5" ></text>
</g>
<g >
<title>syscall.Read (32 samples, 0.18%)</title><rect x="12.9" y="245" width="2.1" height="15.0" fill="rgb(222,147,13)" rx="2" ry="2" />
<text  x="15.86" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (6 samples, 0.03%)</title><rect x="353.9" y="405" width="0.4" height="15.0" fill="rgb(210,217,23)" rx="2" ry="2" />
<text  x="356.91" y="415.5" ></text>
</g>
<g >
<title>runtime.roundupsize (10 samples, 0.06%)</title><rect x="110.7" y="325" width="0.6" height="15.0" fill="rgb(240,118,21)" rx="2" ry="2" />
<text  x="113.65" y="335.5" ></text>
</g>
<g >
<title>runtime.findObject (4 samples, 0.02%)</title><rect x="359.2" y="357" width="0.3" height="15.0" fill="rgb(219,163,45)" rx="2" ry="2" />
<text  x="362.23" y="367.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.01%)</title><rect x="297.5" y="229" width="0.2" height="15.0" fill="rgb(233,214,10)" rx="2" ry="2" />
<text  x="300.53" y="239.5" ></text>
</g>
<g >
<title>runtime.sysmon (2 samples, 0.01%)</title><rect x="482.9" y="405" width="0.1" height="15.0" fill="rgb(214,175,22)" rx="2" ry="2" />
<text  x="485.90" y="415.5" ></text>
</g>
<g >
<title>net.(*conn).Write (745 samples, 4.30%)</title><rect x="241.3" y="213" width="50.8" height="15.0" fill="rgb(207,161,53)" rx="2" ry="2" />
<text  x="244.34" y="223.5" >net.(..</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="311.9" y="229" width="0.1" height="15.0" fill="rgb(244,215,13)" rx="2" ry="2" />
<text  x="314.90" y="239.5" ></text>
</g>
<g >
<title>fmt.(*buffer).WriteByte (2 samples, 0.01%)</title><rect x="118.8" y="325" width="0.2" height="15.0" fill="rgb(229,218,35)" rx="2" ry="2" />
<text  x="121.83" y="335.5" ></text>
</g>
<g >
<title>fmt.newPrinter (112 samples, 0.65%)</title><rect x="217.4" y="341" width="7.7" height="15.0" fill="rgb(250,3,50)" rx="2" ry="2" />
<text  x="220.44" y="351.5" ></text>
</g>
<g >
<title>runtime.handoff (3 samples, 0.02%)</title><rect x="354.5" y="357" width="0.2" height="15.0" fill="rgb(235,114,30)" rx="2" ry="2" />
<text  x="357.46" y="367.5" ></text>
</g>
<g >
<title>runtime.semasleep (1,441 samples, 8.32%)</title><rect x="362.0" y="373" width="98.2" height="15.0" fill="rgb(226,34,45)" rx="2" ry="2" />
<text  x="365.02" y="383.5" >runtime.sem..</text>
</g>
<g >
<title>runtime.memmove (7 samples, 0.04%)</title><rect x="64.5" y="229" width="0.5" height="15.0" fill="rgb(207,188,8)" rx="2" ry="2" />
<text  x="67.55" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock_trampoline (2 samples, 0.01%)</title><rect x="353.2" y="421" width="0.1" height="15.0" fill="rgb(235,51,44)" rx="2" ry="2" />
<text  x="356.17" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (2 samples, 0.01%)</title><rect x="107.1" y="213" width="0.1" height="15.0" fill="rgb(242,204,12)" rx="2" ry="2" />
<text  x="110.11" y="223.5" ></text>
</g>
<g >
<title>runtime.semrelease (2 samples, 0.01%)</title><rect x="10.7" y="293" width="0.1" height="15.0" fill="rgb(211,144,37)" rx="2" ry="2" />
<text  x="13.68" y="303.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (6 samples, 0.03%)</title><rect x="327.4" y="245" width="0.4" height="15.0" fill="rgb(232,108,4)" rx="2" ry="2" />
<text  x="330.42" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (7 samples, 0.04%)</title><rect x="1188.6" y="357" width="0.4" height="15.0" fill="rgb(254,209,11)" rx="2" ry="2" />
<text  x="1191.57" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (2 samples, 0.01%)</title><rect x="107.2" y="293" width="0.2" height="15.0" fill="rgb(210,164,4)" rx="2" ry="2" />
<text  x="110.25" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (9 samples, 0.05%)</title><rect x="1181.7" y="389" width="0.6" height="15.0" fill="rgb(238,164,26)" rx="2" ry="2" />
<text  x="1184.69" y="399.5" ></text>
</g>
<g >
<title>runtime.notewakeup (13 samples, 0.08%)</title><rect x="475.7" y="341" width="0.9" height="15.0" fill="rgb(244,22,40)" rx="2" ry="2" />
<text  x="478.68" y="351.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.01%)</title><rect x="471.1" y="357" width="0.2" height="15.0" fill="rgb(206,0,36)" rx="2" ry="2" />
<text  x="474.12" y="367.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.01%)</title><rect x="1181.8" y="277" width="0.1" height="15.0" fill="rgb(245,87,10)" rx="2" ry="2" />
<text  x="1184.76" y="287.5" ></text>
</g>
<g >
<title>runtime.gentraceback (31 samples, 0.18%)</title><rect x="354.9" y="309" width="2.1" height="15.0" fill="rgb(213,143,45)" rx="2" ry="2" />
<text  x="357.94" y="319.5" ></text>
</g>
<g >
<title>runtime.osyield (3 samples, 0.02%)</title><rect x="475.5" y="325" width="0.2" height="15.0" fill="rgb(209,105,6)" rx="2" ry="2" />
<text  x="478.48" y="335.5" ></text>
</g>
<g >
<title>runtime.notetsleep (4 samples, 0.02%)</title><rect x="1188.1" y="373" width="0.3" height="15.0" fill="rgb(228,34,17)" rx="2" ry="2" />
<text  x="1191.09" y="383.5" ></text>
</g>
<g >
<title>runtime.semawakeup (13 samples, 0.08%)</title><rect x="475.7" y="325" width="0.9" height="15.0" fill="rgb(219,14,53)" rx="2" ry="2" />
<text  x="478.68" y="335.5" ></text>
</g>
<g >
<title>runtime.memmove (3 samples, 0.02%)</title><rect x="354.5" y="341" width="0.2" height="15.0" fill="rgb(251,76,14)" rx="2" ry="2" />
<text  x="357.46" y="351.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (2 samples, 0.01%)</title><rect x="346.7" y="229" width="0.1" height="15.0" fill="rgb(213,191,40)" rx="2" ry="2" />
<text  x="349.70" y="239.5" ></text>
</g>
<g >
<title>runtime.stopm (9 samples, 0.05%)</title><rect x="472.2" y="373" width="0.6" height="15.0" fill="rgb(206,197,2)" rx="2" ry="2" />
<text  x="475.21" y="383.5" ></text>
</g>
<g >
<title>runtime.growslice (7 samples, 0.04%)</title><rect x="214.0" y="309" width="0.5" height="15.0" fill="rgb(243,0,49)" rx="2" ry="2" />
<text  x="217.03" y="319.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.01%)</title><rect x="345.7" y="117" width="0.2" height="15.0" fill="rgb(243,9,27)" rx="2" ry="2" />
<text  x="348.74" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (9 samples, 0.05%)</title><rect x="360.3" y="389" width="0.6" height="15.0" fill="rgb(236,211,39)" rx="2" ry="2" />
<text  x="363.32" y="399.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (1,042 samples, 6.01%)</title><rect x="139.0" y="293" width="70.9" height="15.0" fill="rgb(249,119,32)" rx="2" ry="2" />
<text  x="141.98" y="303.5" >fmt.(*fm..</text>
</g>
<g >
<title>runtime.scanblock (4 samples, 0.02%)</title><rect x="356.7" y="261" width="0.3" height="15.0" fill="rgb(239,170,47)" rx="2" ry="2" />
<text  x="359.71" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (12 samples, 0.07%)</title><rect x="345.3" y="229" width="0.8" height="15.0" fill="rgb(250,128,0)" rx="2" ry="2" />
<text  x="348.27" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.01%)</title><rect x="482.5" y="309" width="0.1" height="15.0" fill="rgb(208,178,25)" rx="2" ry="2" />
<text  x="485.49" y="319.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Load (5 samples, 0.03%)</title><rect x="86.7" y="261" width="0.3" height="15.0" fill="rgb(216,210,28)" rx="2" ry="2" />
<text  x="89.68" y="271.5" ></text>
</g>
<g >
<title>runtime.memmove (29 samples, 0.17%)</title><rect x="297.9" y="293" width="1.9" height="15.0" fill="rgb(251,20,39)" rx="2" ry="2" />
<text  x="300.87" y="303.5" ></text>
</g>
<g >
<title>runtime.lock (4 samples, 0.02%)</title><rect x="483.2" y="373" width="0.2" height="15.0" fill="rgb(243,42,36)" rx="2" ry="2" />
<text  x="486.17" y="383.5" ></text>
</g>
<g >
<title>runtime.convT64 (3 samples, 0.02%)</title><rect x="297.7" y="261" width="0.2" height="15.0" fill="rgb(211,189,0)" rx="2" ry="2" />
<text  x="300.66" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (21 samples, 0.12%)</title><rect x="1182.4" y="357" width="1.4" height="15.0" fill="rgb(222,33,7)" rx="2" ry="2" />
<text  x="1185.37" y="367.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (14 samples, 0.08%)</title><rect x="295.3" y="229" width="1.0" height="15.0" fill="rgb(211,154,54)" rx="2" ry="2" />
<text  x="298.35" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (2 samples, 0.01%)</title><rect x="359.6" y="357" width="0.2" height="15.0" fill="rgb(246,226,54)" rx="2" ry="2" />
<text  x="362.63" y="367.5" ></text>
</g>
<g >
<title>runtime.step (4 samples, 0.02%)</title><rect x="356.4" y="213" width="0.2" height="15.0" fill="rgb(225,110,33)" rx="2" ry="2" />
<text  x="359.37" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (57 samples, 0.33%)</title><rect x="11.2" y="261" width="3.8" height="15.0" fill="rgb(223,73,38)" rx="2" ry="2" />
<text  x="14.16" y="271.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (3 samples, 0.02%)</title><rect x="15.9" y="357" width="0.2" height="15.0" fill="rgb(226,22,23)" rx="2" ry="2" />
<text  x="18.92" y="367.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (63 samples, 0.36%)</title><rect x="16.1" y="405" width="4.3" height="15.0" fill="rgb(233,104,54)" rx="2" ry="2" />
<text  x="19.13" y="415.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.01%)</title><rect x="303.2" y="197" width="0.1" height="15.0" fill="rgb(228,117,12)" rx="2" ry="2" />
<text  x="306.18" y="207.5" ></text>
</g>
<g >
<title>runtime.gcstopm (4 samples, 0.02%)</title><rect x="361.2" y="389" width="0.3" height="15.0" fill="rgb(230,170,51)" rx="2" ry="2" />
<text  x="364.20" y="399.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (2 samples, 0.01%)</title><rect x="296.2" y="197" width="0.1" height="15.0" fill="rgb(244,208,10)" rx="2" ry="2" />
<text  x="299.16" y="207.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (10 samples, 0.06%)</title><rect x="101.0" y="293" width="0.7" height="15.0" fill="rgb(230,222,29)" rx="2" ry="2" />
<text  x="103.98" y="303.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (4 samples, 0.02%)</title><rect x="1188.1" y="357" width="0.3" height="15.0" fill="rgb(221,67,8)" rx="2" ry="2" />
<text  x="1191.09" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (6 samples, 0.03%)</title><rect x="483.0" y="405" width="0.4" height="15.0" fill="rgb(215,99,8)" rx="2" ry="2" />
<text  x="486.04" y="415.5" ></text>
</g>
<g >
<title>syscall.read (32 samples, 0.18%)</title><rect x="12.9" y="229" width="2.1" height="15.0" fill="rgb(208,205,4)" rx="2" ry="2" />
<text  x="15.86" y="239.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.01%)</title><rect x="483.4" y="389" width="0.2" height="15.0" fill="rgb(233,111,27)" rx="2" ry="2" />
<text  x="486.44" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.01%)</title><rect x="343.6" y="309" width="0.1" height="15.0" fill="rgb(241,84,24)" rx="2" ry="2" />
<text  x="346.56" y="319.5" ></text>
</g>
<g >
<title>net/http.(*response).write (1,219 samples, 7.04%)</title><rect x="234.7" y="325" width="83.0" height="15.0" fill="rgb(246,161,25)" rx="2" ry="2" />
<text  x="237.67" y="335.5" >net/http...</text>
</g>
<g >
<title>sync.runtime_nanotime (6 samples, 0.03%)</title><rect x="295.5" y="197" width="0.4" height="15.0" fill="rgb(225,73,48)" rx="2" ry="2" />
<text  x="298.48" y="207.5" ></text>
</g>
<g >
<title>runtime.schedule (25 samples, 0.14%)</title><rect x="360.0" y="405" width="1.7" height="15.0" fill="rgb(216,207,36)" rx="2" ry="2" />
<text  x="362.98" y="415.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (4 samples, 0.02%)</title><rect x="295.1" y="229" width="0.2" height="15.0" fill="rgb(252,227,24)" rx="2" ry="2" />
<text  x="298.07" y="239.5" ></text>
</g>
<g >
<title>runtime.semrelease (2 samples, 0.01%)</title><rect x="15.0" y="309" width="0.2" height="15.0" fill="rgb(242,223,35)" rx="2" ry="2" />
<text  x="18.04" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (2 samples, 0.01%)</title><rect x="483.0" y="309" width="0.2" height="15.0" fill="rgb(222,71,45)" rx="2" ry="2" />
<text  x="486.04" y="319.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.02%)</title><rect x="473.3" y="341" width="0.2" height="15.0" fill="rgb(217,115,41)" rx="2" ry="2" />
<text  x="476.30" y="351.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (10,250 samples, 59.16%)</title><rect x="483.6" y="405" width="698.0" height="15.0" fill="rgb(246,134,22)" rx="2" ry="2" />
<text  x="486.58" y="415.5" >runtime.entersyscallblock_handoff</text>
</g>
<g >
<title>runtime.markroot.func1 (6 samples, 0.03%)</title><rect x="1181.9" y="341" width="0.4" height="15.0" fill="rgb(240,2,49)" rx="2" ry="2" />
<text  x="1184.90" y="351.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (4 samples, 0.02%)</title><rect x="482.6" y="309" width="0.3" height="15.0" fill="rgb(251,190,1)" rx="2" ry="2" />
<text  x="485.63" y="319.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (3 samples, 0.02%)</title><rect x="311.8" y="261" width="0.2" height="15.0" fill="rgb(235,138,4)" rx="2" ry="2" />
<text  x="314.83" y="271.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.01%)</title><rect x="355.8" y="261" width="0.2" height="15.0" fill="rgb(214,95,5)" rx="2" ry="2" />
<text  x="358.82" y="271.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (11 samples, 0.06%)</title><rect x="1189.1" y="373" width="0.8" height="15.0" fill="rgb(244,207,21)" rx="2" ry="2" />
<text  x="1192.11" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (5 samples, 0.03%)</title><rect x="343.6" y="325" width="0.3" height="15.0" fill="rgb(219,51,17)" rx="2" ry="2" />
<text  x="346.56" y="335.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (48 samples, 0.28%)</title><rect x="98.7" y="325" width="3.2" height="15.0" fill="rgb(211,112,54)" rx="2" ry="2" />
<text  x="101.67" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.02%)</title><rect x="10.6" y="341" width="0.2" height="15.0" fill="rgb(210,203,38)" rx="2" ry="2" />
<text  x="13.61" y="351.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (2 samples, 0.01%)</title><rect x="328.2" y="277" width="0.1" height="15.0" fill="rgb(225,143,28)" rx="2" ry="2" />
<text  x="331.17" y="287.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (470 samples, 2.71%)</title><rect x="38.9" y="309" width="32.1" height="15.0" fill="rgb(249,8,20)" rx="2" ry="2" />
<text  x="41.94" y="319.5" >en..</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (3 samples, 0.02%)</title><rect x="220.6" y="229" width="0.2" height="15.0" fill="rgb(250,89,33)" rx="2" ry="2" />
<text  x="223.57" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1,436 samples, 8.29%)</title><rect x="362.1" y="357" width="97.8" height="15.0" fill="rgb(207,116,41)" rx="2" ry="2" />
<text  x="365.09" y="367.5" >runtime.pth..</text>
</g>
<g >
<title>runtime.semasleep (4 samples, 0.02%)</title><rect x="361.2" y="341" width="0.3" height="15.0" fill="rgb(238,53,25)" rx="2" ry="2" />
<text  x="364.20" y="351.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.01%)</title><rect x="359.5" y="357" width="0.1" height="15.0" fill="rgb(210,116,31)" rx="2" ry="2" />
<text  x="362.50" y="367.5" ></text>
</g>
<g >
<title>net/http.newTextprotoReader (3 samples, 0.02%)</title><rect x="10.6" y="389" width="0.2" height="15.0" fill="rgb(225,122,10)" rx="2" ry="2" />
<text  x="13.61" y="399.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.02%)</title><rect x="352.3" y="421" width="0.3" height="15.0" fill="rgb(221,221,15)" rx="2" ry="2" />
<text  x="355.28" y="431.5" ></text>
</g>
<g >
<title>net/http.readRequest (72 samples, 0.42%)</title><rect x="10.6" y="405" width="4.9" height="15.0" fill="rgb(245,28,49)" rx="2" ry="2" />
<text  x="13.61" y="415.5" ></text>
</g>
<g >
<title>net.(*conn).Write (60 samples, 0.35%)</title><rect x="16.3" y="373" width="4.1" height="15.0" fill="rgb(228,205,9)" rx="2" ry="2" />
<text  x="19.33" y="383.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (2 samples, 0.01%)</title><rect x="305.1" y="261" width="0.1" height="15.0" fill="rgb(222,104,46)" rx="2" ry="2" />
<text  x="308.09" y="271.5" ></text>
</g>
<g >
<title>runtime.getStackMap (7 samples, 0.04%)</title><rect x="356.2" y="261" width="0.5" height="15.0" fill="rgb(225,209,17)" rx="2" ry="2" />
<text  x="359.23" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (3 samples, 0.02%)</title><rect x="327.8" y="213" width="0.2" height="15.0" fill="rgb(211,11,50)" rx="2" ry="2" />
<text  x="330.83" y="223.5" ></text>
</g>
<g >
<title>runtime.gorecover (9 samples, 0.05%)</title><rect x="34.4" y="309" width="0.6" height="15.0" fill="rgb(212,127,24)" rx="2" ry="2" />
<text  x="37.38" y="319.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.01%)</title><rect x="361.1" y="341" width="0.1" height="15.0" fill="rgb(222,191,54)" rx="2" ry="2" />
<text  x="364.06" y="351.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (10 samples, 0.06%)</title><rect x="222.5" y="277" width="0.7" height="15.0" fill="rgb(246,152,34)" rx="2" ry="2" />
<text  x="225.48" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (7 samples, 0.04%)</title><rect x="1188.6" y="373" width="0.4" height="15.0" fill="rgb(211,26,20)" rx="2" ry="2" />
<text  x="1191.57" y="383.5" ></text>
</g>
<g >
<title>runtime.newstack (138 samples, 0.80%)</title><rect x="473.5" y="421" width="9.4" height="15.0" fill="rgb(239,53,2)" rx="2" ry="2" />
<text  x="476.50" y="431.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (2 samples, 0.01%)</title><rect x="10.7" y="277" width="0.1" height="15.0" fill="rgb(249,90,49)" rx="2" ry="2" />
<text  x="13.68" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (2 samples, 0.01%)</title><rect x="483.4" y="405" width="0.2" height="15.0" fill="rgb(236,109,3)" rx="2" ry="2" />
<text  x="486.44" y="415.5" ></text>
</g>
<g >
<title>syscall.read (32 samples, 0.18%)</title><rect x="350.0" y="357" width="2.1" height="15.0" fill="rgb(254,108,47)" rx="2" ry="2" />
<text  x="352.96" y="367.5" ></text>
</g>
<g >
<title>runtime.newdefer (28 samples, 0.16%)</title><rect x="303.3" y="277" width="1.9" height="15.0" fill="rgb(219,175,33)" rx="2" ry="2" />
<text  x="306.31" y="287.5" ></text>
</g>
<g >
<title>sync.runtime_procUnpin (4 samples, 0.02%)</title><rect x="101.7" y="309" width="0.2" height="15.0" fill="rgb(213,30,42)" rx="2" ry="2" />
<text  x="104.67" y="319.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (58 samples, 0.33%)</title><rect x="11.1" y="325" width="3.9" height="15.0" fill="rgb(254,215,17)" rx="2" ry="2" />
<text  x="14.09" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (18 samples, 0.10%)</title><rect x="327.3" y="325" width="1.2" height="15.0" fill="rgb(242,207,38)" rx="2" ry="2" />
<text  x="330.29" y="335.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (2 samples, 0.01%)</title><rect x="345.9" y="181" width="0.2" height="15.0" fill="rgb(226,117,53)" rx="2" ry="2" />
<text  x="348.95" y="191.5" ></text>
</g>
<g >
<title>runtime.scang (6 samples, 0.03%)</title><rect x="1181.9" y="325" width="0.4" height="15.0" fill="rgb(217,59,6)" rx="2" ry="2" />
<text  x="1184.90" y="335.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (909 samples, 5.25%)</title><rect x="237.9" y="309" width="61.9" height="15.0" fill="rgb(252,14,27)" rx="2" ry="2" />
<text  x="240.94" y="319.5" >bufio...</text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (2 samples, 0.01%)</title><rect x="354.0" y="389" width="0.1" height="15.0" fill="rgb(231,79,39)" rx="2" ry="2" />
<text  x="356.98" y="399.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="460.0" y="357" width="0.2" height="15.0" fill="rgb(230,113,53)" rx="2" ry="2" />
<text  x="463.02" y="367.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (20 samples, 0.12%)</title><rect x="107.9" y="309" width="1.4" height="15.0" fill="rgb(209,169,29)" rx="2" ry="2" />
<text  x="110.93" y="319.5" ></text>
</g>
<g >
<title>syscall.syscall (32 samples, 0.18%)</title><rect x="18.2" y="293" width="2.2" height="15.0" fill="rgb(254,47,36)" rx="2" ry="2" />
<text  x="21.24" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (60 samples, 0.35%)</title><rect x="16.3" y="357" width="4.1" height="15.0" fill="rgb(235,142,32)" rx="2" ry="2" />
<text  x="19.33" y="367.5" ></text>
</g>
<g >
<title>runtime.deferproc (2 samples, 0.01%)</title><rect x="15.9" y="341" width="0.2" height="15.0" fill="rgb(247,226,33)" rx="2" ry="2" />
<text  x="18.92" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.02%)</title><rect x="10.6" y="357" width="0.2" height="15.0" fill="rgb(225,70,25)" rx="2" ry="2" />
<text  x="13.61" y="367.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1,343 samples, 7.75%)</title><rect x="119.0" y="325" width="91.4" height="15.0" fill="rgb(216,72,23)" rx="2" ry="2" />
<text  x="121.96" y="335.5" >fmt.(*pp)...</text>
</g>
<g >
<title>runtime.nanotime (6 samples, 0.03%)</title><rect x="295.5" y="181" width="0.4" height="15.0" fill="rgb(206,170,38)" rx="2" ry="2" />
<text  x="298.48" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (8 samples, 0.05%)</title><rect x="106.7" y="293" width="0.5" height="15.0" fill="rgb(205,77,37)" rx="2" ry="2" />
<text  x="109.70" y="303.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (3 samples, 0.02%)</title><rect x="312.2" y="261" width="0.2" height="15.0" fill="rgb(214,20,1)" rx="2" ry="2" />
<text  x="315.17" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (83 samples, 0.48%)</title><rect x="329.1" y="325" width="5.7" height="15.0" fill="rgb(211,187,8)" rx="2" ry="2" />
<text  x="332.13" y="335.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (4,809 samples, 27.75%)</title><rect x="20.5" y="421" width="327.5" height="15.0" fill="rgb(232,215,31)" rx="2" ry="2" />
<text  x="23.49" y="431.5" >net/http.serverHandler.ServeHTTP</text>
</g>
<g >
<title>reflect.flag.kind (2 samples, 0.01%)</title><rect x="66.9" y="261" width="0.1" height="15.0" fill="rgb(205,153,44)" rx="2" ry="2" />
<text  x="69.87" y="271.5" ></text>
</g>
<g >
<title>runtime.morestack (138 samples, 0.80%)</title><rect x="473.5" y="437" width="9.4" height="15.0" fill="rgb(236,99,22)" rx="2" ry="2" />
<text  x="476.50" y="447.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.01%)</title><rect x="1181.8" y="261" width="0.1" height="15.0" fill="rgb(227,89,6)" rx="2" ry="2" />
<text  x="1184.76" y="271.5" ></text>
</g>
<g >
<title>runtime.lock (22 samples, 0.13%)</title><rect x="473.6" y="373" width="1.5" height="15.0" fill="rgb(249,98,5)" rx="2" ry="2" />
<text  x="476.57" y="383.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (2 samples, 0.01%)</title><rect x="10.7" y="261" width="0.1" height="15.0" fill="rgb(223,91,41)" rx="2" ry="2" />
<text  x="13.68" y="271.5" ></text>
</g>
<g >
<title>fmt.(*buffer).Write (263 samples, 1.52%)</title><rect x="192.0" y="261" width="17.9" height="15.0" fill="rgb(219,173,29)" rx="2" ry="2" />
<text  x="195.04" y="271.5" ></text>
</g>
<g >
<title>runtime.efaceeq (20 samples, 0.12%)</title><rect x="81.0" y="229" width="1.3" height="15.0" fill="rgb(230,18,25)" rx="2" ry="2" />
<text  x="83.96" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (8 samples, 0.05%)</title><rect x="1181.8" y="373" width="0.5" height="15.0" fill="rgb(225,25,17)" rx="2" ry="2" />
<text  x="1184.76" y="383.5" ></text>
</g>
<g >
<title>runtime._System (4 samples, 0.02%)</title><rect x="352.3" y="437" width="0.3" height="15.0" fill="rgb(216,20,10)" rx="2" ry="2" />
<text  x="355.28" y="447.5" ></text>
</g>
<g >
<title>runtime.scanstack (36 samples, 0.21%)</title><rect x="354.9" y="325" width="2.5" height="15.0" fill="rgb(235,129,41)" rx="2" ry="2" />
<text  x="357.94" y="335.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.01%)</title><rect x="220.6" y="181" width="0.2" height="15.0" fill="rgb(241,217,18)" rx="2" ry="2" />
<text  x="223.64" y="191.5" ></text>
</g>
<g >
<title>runtime.lock (17 samples, 0.10%)</title><rect x="483.6" y="357" width="1.1" height="15.0" fill="rgb(253,142,46)" rx="2" ry="2" />
<text  x="486.58" y="367.5" ></text>
</g>
<g >
<title>runtime.semasleep (4 samples, 0.02%)</title><rect x="1188.1" y="341" width="0.3" height="15.0" fill="rgb(207,54,35)" rx="2" ry="2" />
<text  x="1191.09" y="351.5" ></text>
</g>
<g >
<title>sync.runtime_procUnpin (3 samples, 0.02%)</title><rect x="217.2" y="309" width="0.2" height="15.0" fill="rgb(208,187,24)" rx="2" ry="2" />
<text  x="220.23" y="319.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (2 samples, 0.01%)</title><rect x="15.0" y="277" width="0.2" height="15.0" fill="rgb(227,170,41)" rx="2" ry="2" />
<text  x="18.04" y="287.5" ></text>
</g>
<g >
<title>runtime.gentraceback (8 samples, 0.05%)</title><rect x="345.3" y="181" width="0.6" height="15.0" fill="rgb(213,225,0)" rx="2" ry="2" />
<text  x="348.33" y="191.5" ></text>
</g>
<g >
<title>fmt.(*fmt).init (4 samples, 0.02%)</title><rect x="218.3" y="325" width="0.2" height="15.0" fill="rgb(243,146,51)" rx="2" ry="2" />
<text  x="221.26" y="335.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (3 samples, 0.02%)</title><rect x="357.2" y="293" width="0.2" height="15.0" fill="rgb(205,119,42)" rx="2" ry="2" />
<text  x="360.18" y="303.5" ></text>
</g>
<g >
<title>syscall.syscall (32 samples, 0.18%)</title><rect x="12.9" y="213" width="2.1" height="15.0" fill="rgb(235,96,30)" rx="2" ry="2" />
<text  x="15.86" y="223.5" ></text>
</g>
<g >
<title>runtime.procPin (2 samples, 0.01%)</title><rect x="114.5" y="293" width="0.2" height="15.0" fill="rgb(223,106,4)" rx="2" ry="2" />
<text  x="117.54" y="303.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (6 samples, 0.03%)</title><rect x="294.6" y="197" width="0.4" height="15.0" fill="rgb(221,175,6)" rx="2" ry="2" />
<text  x="297.60" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.01%)</title><rect x="291.8" y="37" width="0.1" height="15.0" fill="rgb(216,3,7)" rx="2" ry="2" />
<text  x="294.81" y="47.5" ></text>
</g>
<g >
<title>encoding/json.newEncodeState (61 samples, 0.35%)</title><rect x="97.8" y="341" width="4.1" height="15.0" fill="rgb(241,137,6)" rx="2" ry="2" />
<text  x="100.78" y="351.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (844 samples, 4.87%)</title><rect x="240.4" y="293" width="57.5" height="15.0" fill="rgb(217,17,52)" rx="2" ry="2" />
<text  x="243.39" y="303.5" >bufio...</text>
</g>
<g >
<title>runtime.lock (4 samples, 0.02%)</title><rect x="291.5" y="37" width="0.3" height="15.0" fill="rgb(210,146,19)" rx="2" ry="2" />
<text  x="294.53" y="47.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (9 samples, 0.05%)</title><rect x="293.1" y="245" width="0.6" height="15.0" fill="rgb(243,152,14)" rx="2" ry="2" />
<text  x="296.10" y="255.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (11 samples, 0.06%)</title><rect x="291.3" y="117" width="0.7" height="15.0" fill="rgb(243,223,31)" rx="2" ry="2" />
<text  x="294.26" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (3 samples, 0.02%)</title><rect x="354.1" y="389" width="0.2" height="15.0" fill="rgb(243,146,15)" rx="2" ry="2" />
<text  x="357.12" y="399.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (58 samples, 0.33%)</title><rect x="11.1" y="341" width="3.9" height="15.0" fill="rgb(235,202,33)" rx="2" ry="2" />
<text  x="14.09" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.03%)</title><rect x="210.0" y="277" width="0.4" height="15.0" fill="rgb(225,145,14)" rx="2" ry="2" />
<text  x="213.02" y="287.5" ></text>
</g>
<g >
<title>runtime.lock (3 samples, 0.02%)</title><rect x="475.5" y="341" width="0.2" height="15.0" fill="rgb(206,123,12)" rx="2" ry="2" />
<text  x="478.48" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.04%)</title><rect x="92.3" y="261" width="0.4" height="15.0" fill="rgb(254,198,50)" rx="2" ry="2" />
<text  x="95.27" y="271.5" ></text>
</g>
<g >
<title>reflect.Value.IsNil (19 samples, 0.11%)</title><rect x="69.7" y="293" width="1.3" height="15.0" fill="rgb(241,169,10)" rx="2" ry="2" />
<text  x="72.66" y="303.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (7 samples, 0.04%)</title><rect x="1188.6" y="405" width="0.4" height="15.0" fill="rgb(237,42,30)" rx="2" ry="2" />
<text  x="1191.57" y="415.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (2 samples, 0.01%)</title><rect x="212.4" y="277" width="0.1" height="15.0" fill="rgb(228,75,13)" rx="2" ry="2" />
<text  x="215.40" y="287.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (81 samples, 0.47%)</title><rect x="354.3" y="437" width="5.5" height="15.0" fill="rgb(218,141,38)" rx="2" ry="2" />
<text  x="357.32" y="447.5" ></text>
</g>
<g >
<title>runtime.getitab (37 samples, 0.21%)</title><rect x="318.4" y="341" width="2.5" height="15.0" fill="rgb(214,18,26)" rx="2" ry="2" />
<text  x="321.36" y="351.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (2 samples, 0.01%)</title><rect x="212.4" y="261" width="0.1" height="15.0" fill="rgb(251,196,31)" rx="2" ry="2" />
<text  x="215.40" y="271.5" ></text>
</g>
<g >
<title>runtime.osyield (4 samples, 0.02%)</title><rect x="483.2" y="357" width="0.2" height="15.0" fill="rgb(238,90,24)" rx="2" ry="2" />
<text  x="486.17" y="367.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (6 samples, 0.03%)</title><rect x="345.5" y="149" width="0.4" height="15.0" fill="rgb(239,138,14)" rx="2" ry="2" />
<text  x="348.47" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (2 samples, 0.01%)</title><rect x="97.4" y="261" width="0.2" height="15.0" fill="rgb(226,69,44)" rx="2" ry="2" />
<text  x="100.44" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (13 samples, 0.08%)</title><rect x="475.7" y="309" width="0.9" height="15.0" fill="rgb(236,57,4)" rx="2" ry="2" />
<text  x="478.68" y="319.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (2 samples, 0.01%)</title><rect x="334.0" y="309" width="0.1" height="15.0" fill="rgb(240,129,32)" rx="2" ry="2" />
<text  x="336.96" y="319.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.02%)</title><rect x="482.2" y="293" width="0.2" height="15.0" fill="rgb(231,23,8)" rx="2" ry="2" />
<text  x="485.22" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeUnlock (3 samples, 0.02%)</title><rect x="241.5" y="165" width="0.3" height="15.0" fill="rgb(213,117,17)" rx="2" ry="2" />
<text  x="244.55" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (2 samples, 0.01%)</title><rect x="241.8" y="165" width="0.1" height="15.0" fill="rgb(229,80,38)" rx="2" ry="2" />
<text  x="244.75" y="175.5" ></text>
</g>
<g >
<title>runtime.acquirem (5 samples, 0.03%)</title><rect x="107.4" y="309" width="0.3" height="15.0" fill="rgb(228,173,45)" rx="2" ry="2" />
<text  x="110.39" y="319.5" ></text>
</g>
<g >
<title>runtime.park_m (189 samples, 1.09%)</title><rect x="460.6" y="421" width="12.9" height="15.0" fill="rgb(252,229,29)" rx="2" ry="2" />
<text  x="463.63" y="431.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.02%)</title><rect x="472.8" y="357" width="0.2" height="15.0" fill="rgb(252,115,52)" rx="2" ry="2" />
<text  x="475.82" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.01%)</title><rect x="343.6" y="293" width="0.1" height="15.0" fill="rgb(239,32,53)" rx="2" ry="2" />
<text  x="346.56" y="303.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (13 samples, 0.08%)</title><rect x="334.8" y="325" width="0.9" height="15.0" fill="rgb(230,137,19)" rx="2" ry="2" />
<text  x="337.78" y="335.5" ></text>
</g>
<g >
<title>runtime.findObject (3 samples, 0.02%)</title><rect x="210.2" y="229" width="0.2" height="15.0" fill="rgb(236,229,50)" rx="2" ry="2" />
<text  x="213.15" y="239.5" ></text>
</g>
<g >
<title>runtime.findObject (3 samples, 0.02%)</title><rect x="92.5" y="213" width="0.2" height="15.0" fill="rgb(218,190,26)" rx="2" ry="2" />
<text  x="95.47" y="223.5" ></text>
</g>
<g >
<title>runtime.memmove (10 samples, 0.06%)</title><rect x="111.3" y="341" width="0.7" height="15.0" fill="rgb(216,27,51)" rx="2" ry="2" />
<text  x="114.34" y="351.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.01%)</title><rect x="472.8" y="341" width="0.2" height="15.0" fill="rgb(240,8,54)" rx="2" ry="2" />
<text  x="475.82" y="351.5" ></text>
</g>
<g >
<title>net.(*netFD).SetReadDeadline (3 samples, 0.02%)</title><rect x="15.9" y="389" width="0.2" height="15.0" fill="rgb(229,90,41)" rx="2" ry="2" />
<text  x="18.92" y="399.5" ></text>
</g>
<g >
<title>reflect.unpackEface (8 samples, 0.05%)</title><rect x="88.1" y="309" width="0.6" height="15.0" fill="rgb(248,171,50)" rx="2" ry="2" />
<text  x="91.11" y="319.5" ></text>
</g>
<g >
<title>runtime.findrunnable (3 samples, 0.02%)</title><rect x="361.0" y="389" width="0.2" height="15.0" fill="rgb(219,71,7)" rx="2" ry="2" />
<text  x="364.00" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (774 samples, 4.47%)</title><rect x="35.0" y="325" width="52.7" height="15.0" fill="rgb(228,73,23)" rx="2" ry="2" />
<text  x="37.99" y="335.5" >encod..</text>
</g>
<g >
<title>runtime.unlock (3 samples, 0.02%)</title><rect x="472.8" y="373" width="0.2" height="15.0" fill="rgb(238,89,50)" rx="2" ry="2" />
<text  x="475.82" y="383.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (43 samples, 0.25%)</title><rect x="112.0" y="341" width="2.9" height="15.0" fill="rgb(209,89,0)" rx="2" ry="2" />
<text  x="115.02" y="351.5" ></text>
</g>
<g >
<title>runtime.markroot (38 samples, 0.22%)</title><rect x="354.8" y="373" width="2.6" height="15.0" fill="rgb(218,15,54)" rx="2" ry="2" />
<text  x="357.80" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (8 samples, 0.05%)</title><rect x="106.7" y="277" width="0.5" height="15.0" fill="rgb(219,60,51)" rx="2" ry="2" />
<text  x="109.70" y="287.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (24 samples, 0.14%)</title><rect x="312.5" y="293" width="1.6" height="15.0" fill="rgb(244,187,43)" rx="2" ry="2" />
<text  x="315.51" y="303.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (17 samples, 0.10%)</title><rect x="223.7" y="293" width="1.2" height="15.0" fill="rgb(216,158,16)" rx="2" ry="2" />
<text  x="226.70" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (7 samples, 0.04%)</title><rect x="214.0" y="293" width="0.5" height="15.0" fill="rgb(237,157,7)" rx="2" ry="2" />
<text  x="217.03" y="303.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (5 samples, 0.03%)</title><rect x="356.3" y="245" width="0.3" height="15.0" fill="rgb(217,50,12)" rx="2" ry="2" />
<text  x="359.30" y="255.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (6 samples, 0.03%)</title><rect x="88.2" y="293" width="0.5" height="15.0" fill="rgb(234,183,22)" rx="2" ry="2" />
<text  x="91.25" y="303.5" ></text>
</g>
<g >
<title>runtime.markroot (21 samples, 0.12%)</title><rect x="1182.4" y="373" width="1.4" height="15.0" fill="rgb(254,191,34)" rx="2" ry="2" />
<text  x="1185.37" y="383.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="1181.4" y="325" width="0.2" height="15.0" fill="rgb(240,101,32)" rx="2" ry="2" />
<text  x="1184.35" y="335.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (2 samples, 0.01%)</title><rect x="1181.8" y="357" width="0.1" height="15.0" fill="rgb(237,51,20)" rx="2" ry="2" />
<text  x="1184.76" y="367.5" ></text>
</g>
<g >
<title>runtime.notesleep (82 samples, 0.47%)</title><rect x="476.6" y="325" width="5.6" height="15.0" fill="rgb(205,128,21)" rx="2" ry="2" />
<text  x="479.63" y="335.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.02%)</title><rect x="1188.4" y="357" width="0.2" height="15.0" fill="rgb(249,160,22)" rx="2" ry="2" />
<text  x="1191.37" y="367.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1,328 samples, 7.66%)</title><rect x="24.5" y="357" width="90.4" height="15.0" fill="rgb(218,166,52)" rx="2" ry="2" />
<text  x="27.51" y="367.5" >encoding/j..</text>
</g>
<g >
<title>runtime.wbBufFlush1 (2 samples, 0.01%)</title><rect x="346.7" y="213" width="0.1" height="15.0" fill="rgb(245,148,16)" rx="2" ry="2" />
<text  x="349.70" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1,009 samples, 5.82%)</title><rect x="29.1" y="341" width="68.7" height="15.0" fill="rgb(234,198,34)" rx="2" ry="2" />
<text  x="32.07" y="351.5" >encodin..</text>
</g>
<g >
<title>strconv.formatBits (80 samples, 0.46%)</title><rect x="59.6" y="245" width="5.4" height="15.0" fill="rgb(248,195,39)" rx="2" ry="2" />
<text  x="62.58" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (4 samples, 0.02%)</title><rect x="1188.1" y="325" width="0.3" height="15.0" fill="rgb(244,40,23)" rx="2" ry="2" />
<text  x="1191.09" y="335.5" ></text>
</g>
<g >
<title>runtime.deferreturn (28 samples, 0.16%)</title><rect x="16.3" y="325" width="1.9" height="15.0" fill="rgb(215,223,51)" rx="2" ry="2" />
<text  x="19.33" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.01%)</title><rect x="297.7" y="245" width="0.2" height="15.0" fill="rgb(228,172,32)" rx="2" ry="2" />
<text  x="300.73" y="255.5" ></text>
</g>
<g >
<title>net.(*conn).Read (57 samples, 0.33%)</title><rect x="11.2" y="293" width="3.8" height="15.0" fill="rgb(249,218,8)" rx="2" ry="2" />
<text  x="14.16" y="303.5" ></text>
</g>
</g>
</svg>
